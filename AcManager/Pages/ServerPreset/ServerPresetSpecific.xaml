<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mui="http://firstfloorsoftware.com/ModernUI" xmlns:t="http://acstuff.club/app/tools" xmlns:g="clr-namespace:AcManager"
    xmlns:c="http://acstuff.club/app/controls" xmlns:local="clr-namespace:AcManager.Pages.ServerPreset" xmlns:a="clr-namespace:AcTools;assembly=AcTools">
  <ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="/FirstFloor.ModernUI;component/Assets/TextBox.xaml" />
    <ResourceDictionary Source="/FirstFloor.ModernUI;component/Assets/TextBlock.xaml" />
    <ResourceDictionary Source="/FirstFloor.ModernUI;component/Assets/BetterTextBox.xaml" />
    <ResourceDictionary Source="/FirstFloor.ModernUI;component/Assets/ComboBox.xaml" />
    <ResourceDictionary Source="/FirstFloor.ModernUI;component/Assets/Converters.xaml" />
    <mui:SharedResourceDictionary Source="/AcManager.Controls;component/Assets/Converters.xaml" />
    <mui:SharedResourceDictionary Source="/AcManager.Controls;component/Assets/SettingsSpecific.xaml" />
  </ResourceDictionary.MergedDictionaries>

  <DataTemplate x:Key="SessionTemplate">
    <ContentControl Content="{Binding}" Background="Transparent">
      <ContentControl.Resources>
        <DataTemplate DataType="{x:Type t:ServerSessionEntry}">
          <DockPanel IsEnabled="{Binding IsAvailable}">
            <CheckBox IsChecked="{Binding IsEnabled}" DockPanel.Dock="Top" Margin="0 0 0 8">
              <Label>
                <TextBlock Text="{Binding DisplayName}" Style="{StaticResource Heading2}" />
              </Label>
            </CheckBox>

            <StackPanel Style="{StaticResource SettingsPanel}" Margin="0" IsEnabled="{Binding IsEnabled}">
              <!--<DockPanel>
                      <Label Content="Name:" />
                      <mui:BetterTextBox Text="{Binding ConfigName}" Placeholder="{Binding DisplayName}" />
                    </DockPanel>-->

              <DockPanel ToolTip="{Binding Time, Converter={StaticResource ReadableTimeSpanConverter}}">
                <mui:ValueLabel Value="{Binding Time, Converter={StaticResource TimeSpanHhMmSsConverter}}" Content="Time" mui:BetterTextBox.Mode="Time" />
                <Slider Minimum="1" Maximum="90" TickFrequency="8.9" TickPlacement="BottomRight"
                    Value="{Binding Time, Converter={StaticResource TimeSpanMinutesConverter}, ConverterParameter=1}" />
              </DockPanel>

              <CheckBox IsChecked="{Binding IsOpen}" Visibility="{Binding IsClosable, Converter={StaticResource BooleanToVisibilityConverter}}">
                <Label Content="Can join" />
              </CheckBox>
            </StackPanel>
          </DockPanel>
        </DataTemplate>

        <DataTemplate DataType="{x:Type t:ServerQualificationSessionEntry}">
          <DockPanel IsEnabled="{Binding IsAvailable}">
            <CheckBox IsChecked="{Binding IsEnabled}" DockPanel.Dock="Top" Margin="0 0 0 8">
              <Label>
                <TextBlock Text="{Binding DisplayName}" Style="{StaticResource Heading2}" />
              </Label>
            </CheckBox>

            <StackPanel Style="{StaticResource SettingsPanel}" Margin="0" IsEnabled="{Binding IsEnabled}">
              <!--<DockPanel>
                      <Label Content="Name:" />
                      <mui:BetterTextBox Text="{Binding ConfigName}" Placeholder="{Binding DisplayName}" />
                    </DockPanel>-->

              <DockPanel ToolTip="{Binding Time, Converter={StaticResource ReadableTimeSpanConverter}}">
                <mui:ValueLabel Value="{Binding Time, Converter={StaticResource TimeSpanHhMmSsConverter}}" Content="Time" mui:BetterTextBox.Mode="Time" />
                <Slider Minimum="1" Maximum="90" TickFrequency="8.9" TickPlacement="BottomRight"
                    Value="{Binding Time, Converter={StaticResource TimeSpanMinutesConverter}, ConverterParameter=1}" />
              </DockPanel>

              <CheckBox IsChecked="{Binding IsOpen}" Visibility="{Binding IsClosable, Converter={StaticResource BooleanToVisibilityConverter}}">
                <Label Content="Can join" />
              </CheckBox>

              <DockPanel>
                <mui:ValueLabel Value="{Binding QualifyLimitPercentage}" Postfix="%" Content="Qualify limit" />
                <Slider Minimum="100" Maximum="200" Value="{Binding QualifyLimitPercentage}" TickFrequency="25" TickPlacement="BottomRight" />
              </DockPanel>
            </StackPanel>
          </DockPanel>
        </DataTemplate>

        <DataTemplate DataType="{x:Type t:ServerRaceSessionEntry}">
          <DockPanel IsEnabled="{Binding IsAvailable}">
            <CheckBox IsChecked="{Binding IsEnabled}" DockPanel.Dock="Top" Margin="0 0 0 8">
              <Label>
                <TextBlock Text="{Binding DisplayName}" Style="{StaticResource Heading2}" />
              </Label>
            </CheckBox>

            <StackPanel Style="{StaticResource SettingsPanel}" Margin="0" IsEnabled="{Binding IsEnabled}">
              <!--<DockPanel>
                      <Label Content="Name:" />
                      <mui:BetterTextBox Text="{Binding ConfigName}" Placeholder="{Binding DisplayName}" />
                    </DockPanel>-->

              <DockPanel>
                <Label Content="Limit by:" />
                <mui:LabeledToggleButton IsChecked="{Binding LimitByTime}" LabelChecked="Time" LabelUnchecked="Laps" Margin="0 0 0 0" />
              </DockPanel>

              <mui:BooleanSwitch Value="{Binding LimitByTime}">
                <mui:BooleanSwitch.True>
                  <DockPanel ToolTip="{Binding Time, Converter={StaticResource ReadableTimeSpanConverter}}">
                    <mui:ValueLabel Value="{Binding Time, Converter={StaticResource TimeSpanHhMmSsConverter}}" Content="Time" mui:BetterTextBox.Mode="Time"
                        VerticalAlignment="Top" Margin="0 6 16 0" />
                    <CheckBox IsChecked="{Binding ExtraLap}" Margin="0 4 0 0" DockPanel.Dock="Bottom">
                      <Label Content="Extra lap" />
                    </CheckBox>
                    <Slider Minimum="1" Maximum="90" TickFrequency="8.9" TickPlacement="BottomRight"
                        Value="{Binding Time, Converter={StaticResource TimeSpanMinutesConverter}, ConverterParameter=1}" />
                  </DockPanel>
                </mui:BooleanSwitch.True>
                <mui:BooleanSwitch.False>
                  <DockPanel>
                    <mui:ValueLabel Value="{Binding LapsCount}" Content="{x:Static g:AppStrings.Drive_RaceDuration}"
                        Postfix="{Binding LapsCount, Converter={StaticResource PluralizingConverter}, ConverterParameter={x:Static c:ControlsStrings.Common_LapsPostfix}}" />
                    <Slider Minimum="0" Maximum="1" TickPlacement="BottomRight" TickFrequency="0.1">
                      <Slider.Value>
                        <Binding Path="LapsCount">
                          <Binding.Converter>
                            <mui:LogarithmicScale Minimum="1" Middle="40" Maximum="120" />
                          </Binding.Converter>
                        </Binding>
                      </Slider.Value>
                    </Slider>
                  </DockPanel>
                </mui:BooleanSwitch.False>
              </mui:BooleanSwitch>

              <DockPanel ToolTip="{Binding WaitTime, Converter={StaticResource ReadableTimeSpanConverter}}">
                <mui:ValueLabel Value="{Binding WaitTime, Converter={StaticResource TimeSpanHhMmSsConverter}}" Content="Initial delay"
                    mui:BetterTextBox.Mode="Time" />
                <Slider Minimum="1" Maximum="120" TickFrequency="11.9" TickPlacement="BottomRight"
                    Value="{Binding WaitTime, Converter={StaticResource TimeSpanSecondsConverter}, ConverterParameter=1}" />
              </DockPanel>

              <DockPanel>
                <DockPanel.ToolTip>
                  <ToolTip Content="{Binding RaceOverTime, Converter={StaticResource ReadableTimeSpanConverter}}"
                      ContentStringFormat="{}Time the server is going to wait for players to end the race: {0}" />
                </DockPanel.ToolTip>
                <mui:ValueLabel Value="{Binding RaceOverTime, Converter={StaticResource TimeSpanHhMmSsConverter}}" Content="Race over" />
                <Slider Minimum="0" Maximum="300" TickFrequency="30" TickPlacement="BottomRight"
                    Value="{Binding RaceOverTime, Converter={StaticResource TimeSpanSecondsConverter}, ConverterParameter=1}" />
              </DockPanel>

              <DockPanel>
                <DockPanel.ToolTip>
                  <ToolTip Content="{Binding ResultScreenTime, Converter={StaticResource ReadableTimeSpanConverter}}"
                      ContentStringFormat="{}Time the server is going to wait for players to end the race: {0}" />
                </DockPanel.ToolTip>
                <mui:ValueLabel Value="{Binding ResultScreenTime, Converter={StaticResource TimeSpanHhMmSsConverter}}" Content="Result screen" />
                <Slider Minimum="0" Maximum="120" TickFrequency="15" TickPlacement="BottomRight"
                    Value="{Binding ResultScreenTime, Converter={StaticResource TimeSpanSecondsConverter}, ConverterParameter=1}" />
              </DockPanel>

              <DockPanel>
                <Label Content="Join type:" />
                <ComboBox ItemsSource="{x:Static local:SelectedPage.RaceJoinTypes}" SelectedItem="{Binding JoinType}">
                  <ComboBox.ItemTemplate>
                    <DataTemplate>
                      <TextBlock Text="{Binding Converter={StaticResource EnumToDescriptionConverter}}" />
                    </DataTemplate>
                  </ComboBox.ItemTemplate>
                </ComboBox>
              </DockPanel>

              <DockPanel>
                <CheckBox IsChecked="{Binding MandatoryPit}" DockPanel.Dock="Left" Width="148" Margin="0 4 8 0">
                  <Label Content="Mandatory pit" />
                </CheckBox>

                <mui:BooleanSwitch Value="{Binding LimitByTime}" Margin="0 4 0 0" IsEnabled="{Binding MandatoryPit}">
                  <mui:BooleanSwitch.True>
                    <mui:SpacingUniformGrid HorizontalSpacing="8" Rows="1">
                      <mui:ValueLabel Value="{Binding MandatoryPitFrom}" Content="From" Postfix=" min" mui:BetterTextBox.Mode="Integer" Margin="0" />
                      <mui:ValueLabel Value="{Binding MandatoryPitTo}" Content="To" Postfix=" min" mui:BetterTextBox.Mode="Integer" Margin="0" />
                    </mui:SpacingUniformGrid>
                  </mui:BooleanSwitch.True>
                  <mui:BooleanSwitch.False>
                    <mui:SpacingUniformGrid HorizontalSpacing="8" Rows="1">
                      <mui:ValueLabel Value="{Binding MandatoryPitFrom}" Content="From" Postfix=" lap" mui:BetterTextBox.Mode="Integer" Margin="0" />
                      <mui:ValueLabel Value="{Binding MandatoryPitTo}" Content="To" Postfix=" lap" mui:BetterTextBox.Mode="Integer" Margin="0" />
                    </mui:SpacingUniformGrid>
                  </mui:BooleanSwitch.False>
                </mui:BooleanSwitch>
              </DockPanel>

              <DockPanel ToolTip="Repeat race with reversed grid; top X position or −1 for all valid positions">
                <mui:ValueLabel Value="{Binding ReversedGridRacePositions}" Content="Reversed grid" HorizontalAlignment="Left" Margin="0 8 0 0" />
              </DockPanel>

            </StackPanel>
          </DockPanel>

        </DataTemplate>
      </ContentControl.Resources>
    </ContentControl>
  </DataTemplate>

  <DataTemplate x:Key="WeatherDataTemplate" DataType="{x:Type t:ServerWeatherEntry}">
    <StackPanel Style="{StaticResource SettingsPanel}" Width="400" Margin="8" Background="Transparent" TextBlock.FontWeight="Normal"
        mui:ContextMenuAdvancement.PropagateToChildren="True">
      <StackPanel.ContextMenu>
        <ContextMenu>
          <MenuItem Header="Temperature in relative range" IsCheckable="True" IsChecked="{mui:Stored 'temperatureRelativeRange=True'}" />
          <Separator />
          <MenuItem Header="Wind speed in meters per second" IsCheckable="True" IsChecked="{mui:Stored windSpeedInMetersPerSecond}" />
          <MenuItem Header="Wind speed in relative range" IsCheckable="True" IsChecked="{mui:Stored 'windSpeedRelativeRange=True'}" />
          <MenuItem Header="Wind direction in degrees" IsCheckable="True" IsChecked="{mui:Stored windDirectionInDegrees}" />
          <MenuItem Header="Wind speed in relative range" IsCheckable="True" IsChecked="{mui:Stored 'windSpeedRelativeRange=True'}" />
        </ContextMenu>
      </StackPanel.ContextMenu>

      <TextBlock Text="{Binding Index, Converter={StaticResource SumConverter}, ConverterParameter=1, StringFormat='{}#{0}'}" Style="{StaticResource Small}"
          Margin="0 0 0 8" />

      <DockPanel Margin="0 0 0 8">
        <mui:LabeledToggleButton IsChecked="{Binding WeatherFxMode}" LabelChecked="Weather FX" LabelUnchecked="Basic weather" Margin="0 0 4 0"
            DockPanel.Dock="Left" Height="23" />

        <mui:BooleanSwitch Value="{Binding WeatherFxMode}">
          <mui:BooleanSwitch.True>
            <DockPanel Margin="0">
              <mui:ContextMenuButton DockPanel.Dock="Right" VerticalAlignment="Center">
                <c:ModernPopup Padding="16 12 16 16">
                  <mui:SpacingStackPanel Spacing="8" Width="360">

                    <DockPanel>
                      <CheckBox IsChecked="{Binding WeatherFxCustomStartTime}" />
                      <mui:ValueLabel IsEnabled="{Binding WeatherFxCustomStartTime}"
                          Value="{Binding WeatherFxStartTime, Converter={StaticResource AcTimeDisplayConverter}}" mui:BetterTextBox.Mode="Time"
                          Content="{x:Static g:AppStrings.Drive_Time}" Width="80" />
                      <Slider IsEnabled="{Binding WeatherFxCustomStartTime}" Value="{Binding WeatherFxStartTime}" TickFrequency="3600"
                          TickPlacement="BottomRight" IsSnapToTickEnabled="False" Minimum="0"
                          Maximum="{Binding Source={x:Static a:CommonAcConsts.TimeAbsoluteMaximum}}" SmallChange="1800" LargeChange="3600" />
                    </DockPanel>

                    <DockPanel>
                      <mui:ValueLabel IsEnabled="{Binding WeatherFxCustomStartTime}"
                          Value="{Binding WeatherFxTimeMultiplier}" Postfix="×"
                          Content="{x:Static g:AppStrings.Drive_Time}" Width="100" />
                      <Slider IsEnabled="{Binding WeatherFxCustomStartTime}" Minimum="0" Maximum="1" TickFrequency="0.2" TickPlacement="BottomRight"
                          IsSnapToTickEnabled="False" SmallChange="0.1" LargeChange="0.1">
                        <Slider.Value>
                          <Binding Path="WeatherFxTimeMultiplier">
                            <Binding.Converter>
                              <mui:LogarithmicScale Minimum="0" Middle="2" Maximum="20" RoundTo="0.1" />
                            </Binding.Converter>
                          </Binding>
                        </Slider.Value>
                      </Slider>
                    </DockPanel>

                    <DockPanel>
                      <CheckBox IsChecked="{Binding WeatherFxCustomStartDate}" Width="121">
                        <Label Content="Specific date:" />
                      </CheckBox>
                      <DatePicker IsEnabled="{Binding WeatherFxCustomStartDate}" SelectedDate="{Binding WeatherFxStartDate}"
                          c:AcDateLimiter.After1970Only="True" />
                    </DockPanel>

                  </mui:SpacingStackPanel>
                </c:ModernPopup>
              </mui:ContextMenuButton>

              <mui:BetterComboBox ItemsSource="{Binding Source={x:Static t:ServerWeatherEntry.WeatherTypes}}" SelectedItem="{Binding WeatherFxType}"
                  IsEditable="False">
                <mui:BetterComboBox.ItemTemplate>
                  <DataTemplate>
                    <TextBlock Text="{Binding Converter={StaticResource EnumToDescriptionConverter}}" Margin="0" Padding="0" />
                  </DataTemplate>
                </mui:BetterComboBox.ItemTemplate>
              </mui:BetterComboBox>

            </DockPanel>
          </mui:BooleanSwitch.True>
          <mui:BooleanSwitch.False>
            <c:WeatherComboBox SelectedWeather="{Binding Weather}" />
          </mui:BooleanSwitch.False>
        </mui:BooleanSwitch>
      </DockPanel>


      <DockPanel>
        <c:DoubleTemperatureValueLabel Padding="8 0 0 0" RelativeRangeBase="{Binding BaseAmbientTemperature, StringFormat='{}{0:F1}'}"
            RelativeRangeHalf="{Binding AmbientTemperatureVariationHalf, StringFormat='{}{0:F1}'}" Background="Transparent"
            Content="{x:Static g:AppStrings.Drive_Temperature}" Width="240" JoinIfEqual="True" RelativeRange="{mui:Stored 'temperatureRelativeRange=True'}" />
        <mui:DoubleSlider TickFrequency="6" TickPlacement="BottomRight" Value="{Binding BaseAmbientTemperature}" Range="{Binding AmbientTemperatureVariation}"
            BindingMode="PositionRange" Minimum="{x:Static a:CommonAcConsts.TemperatureMinimum}" Maximum="{x:Static a:CommonAcConsts.TemperatureMaximum}" />
      </DockPanel>

      <DockPanel>
        <DockPanel.ToolTip>
          <ToolTip Content="{Binding RecommendedRoadTemperature}" ContentStringFormat="{}Recommended road temperature: {0:F1} °C" />
        </DockPanel.ToolTip>
        <c:DoubleTemperatureValueLabel Padding="8 0 0 0" RelativeRangeBase="{Binding BaseRoadTemperature, StringFormat='{}{0:F1}'}"
            RelativeRangeHalf="{Binding RoadTemperatureVariationHalf, StringFormat='{}{0:F1}'}" Background="Transparent" Content="Road temperature" Width="240"
            JoinIfEqual="True" RelativeRange="{mui:Stored 'temperatureRelativeRange=True'}" />
        <mui:DoubleSlider TickFrequency="6" TickPlacement="BottomRight" Value="{Binding BaseRoadTemperature}" Range="{Binding RoadTemperatureVariation}"
            BindingMode="PositionRange" Minimum="{x:Static a:CommonAcConsts.TemperatureMinimum}" Maximum="{x:Static a:CommonAcConsts.TemperatureMaximum}" />
      </DockPanel>

      <DockPanel Margin="0 4 0 0">
        <mui:RoundSlider Minimum="0" Maximum="360" TickFrequency="22.5" Value="{Binding WindDirectionFlipped}" DockPanel.Dock="Right" Margin="4 -14 0 0"
            TickPlacement="Both" IsSnapToTickEnabled="{Binding Value, ElementName=WindDirectionSwitch, Converter={StaticResource InvertBooleanConverter}}">
          <mui:RoundSlider.Content>
            <Viewbox Stretch="Uniform" StretchDirection="DownOnly" HorizontalAlignment="Center" VerticalAlignment="Center" Width="24" Height="24">
              <mui:BooleanSwitch x:Name="WindDirectionSwitch">
                <mui:BooleanSwitch.Value>
                  <MultiBinding Converter="{StaticResource AndConverter}">
                    <!--<Binding Path="RandomWindDirection" Converter="{StaticResource InvertBooleanConverter}" />-->
                    <mui:Stored Key="windDirectionInDegrees" />
                  </MultiBinding>
                </mui:BooleanSwitch.Value>
                <mui:BooleanSwitch.False>
                  <TextBlock Text="{Binding DisplayWindDirection}" Style="{StaticResource Label}" Padding="0 0 0 2" />
                </mui:BooleanSwitch.False>
                <mui:BooleanSwitch.True>
                  <mui:ValueLabel Value="{Binding WindDirection, StringFormat='{}{0:F0}'}" Postfix="°" VerticalAlignment="Center" Padding="3 0 0 0"
                      Margin="0 1 0 -1" />
                </mui:BooleanSwitch.True>
              </mui:BooleanSwitch>
            </Viewbox>
          </mui:RoundSlider.Content>
        </mui:RoundSlider>

        <mui:BooleanSwitch Value="{mui:Stored windSpeedInMetersPerSecond}" Margin="0 0 0 -2" DockPanel.Dock="Top" HorizontalAlignment="Left">
          <mui:BooleanSwitch.True>
            <mui:DoubleValueLabel Padding="8 0 0 0" Content="Wind" Postfix="{x:Static t:ToolsStrings.Common_MetersPerSecondPostfix}" JoinIfEqual="True" RelativeRange="{mui:Stored 'windSpeedRelativeRange=True'}"
                RelativeRangeStringFormat="0.#"
                Value="{Binding WindSpeedMin, StringFormat='{}{0:F1}', Converter={StaticResource MultiplyConverter}, ConverterParameter=0.277778}"
                SecondValue="{Binding WindSpeedMax, StringFormat='{}{0:F1}', Converter={StaticResource MultiplyConverter}, ConverterParameter=0.277778}" />
          </mui:BooleanSwitch.True>
          <mui:BooleanSwitch.False>
            <mui:DoubleValueLabel Padding="8 0 0 0" Content="Wind" Postfix=" km/h" JoinIfEqual="True"
                RelativeRange="{mui:Stored 'windSpeedRelativeRange=True'}" RelativeRangeStringFormat="0.#" Value="{Binding WindSpeedMin}"
                SecondValue="{Binding WindSpeedMax}" />
          </mui:BooleanSwitch.False>
        </mui:BooleanSwitch>

        <mui:DoubleSlider Minimum="0" Maximum="35" From="{Binding WindSpeedMin}" To="{Binding WindSpeedMax}" Margin="0 6 0 4" TickFrequency="3.5"
            TickPlacement="BottomRight" IsSnapToTickEnabled="False" SmallChange="7" LargeChange="7" BindingMode="FromToFixed"
            mui:FancyHintsService.Hint="{Binding Id, Source={x:Static c:FancyHints.DoubleSlider}}" mui:FancyHintsService.HorizontalContentAlignment="Right"
            mui:FancyHintsService.AttachTo="{x:Type Thumb}" />
      </DockPanel>

      <DockPanel>
        <mui:ValueLabel Padding="8 0 0 0" Value="{Binding WindDirectionVariation, StringFormat='{}{0:F0}'}" Background="Transparent"
            Content="Wind direction variation" Width="240" Postfix="°" />
        <Slider TickFrequency="15" TickPlacement="BottomRight" Value="{Binding WindDirectionVariation}" Minimum="0" Maximum="90" />
      </DockPanel>

      <Button Content="Delete" Command="{Binding DeleteCommand}"
          Visibility="{Binding Index, Converter={StaticResource MoreToVisibilityConverter}, ConverterParameter='0,hidden'}" />
    </StackPanel>
  </DataTemplate>
</ResourceDictionary>