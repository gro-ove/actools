<UserControl x:Class="AcManager.Pages.Drive.OnlineServer" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mui="http://firstfloorsoftware.com/ModernUI"
    xmlns:dr="clr-namespace:AcManager.Pages.Drive" xmlns:g="clr-namespace:AcManager" xmlns:c="http://acstuff.club/app/controls"
    xmlns:sys="clr-namespace:System;assembly=mscorlib" xmlns:t="http://acstuff.club/app/tools" xmlns:uc="clr-namespace:AcManager.UserControls"
    xmlns:p="clr-namespace:AcTools.Processes;assembly=AcTools" Loaded="OnLoaded" Unloaded="OnUnloaded" mc:Ignorable="d"
    mui:InputBindingBehavior.PropagateToWindow="True" MouseRightButtonUp="OnMouseRightButtonUp" d:DataContext="{d:DesignInstance dr:OnlineServer+ViewModel}"
    x:Name="This" SizeChanged="OnSizeChanged">
  <UserControl.Resources>
    <ResourceDictionary>
      <ResourceDictionary.MergedDictionaries>
        <mui:SharedResourceDictionary Source="/AcManager.Controls;component/Assets/AcItemWrapperSpecific.xaml" />
        <mui:SharedResourceDictionary Source="/AcManager.Controls;component/Assets/OnlineSpecific.xaml" />
        <mui:SharedResourceDictionary Source="/AcManager.Controls;component/Assets/IconData.xaml" />
        <mui:SharedResourceDictionary Source="/AcManager.Controls;component/Assets/Converters.xaml" />
        <mui:SharedResourceDictionary Source="/FirstFloor.ModernUI;component/Assets/ModernUI.xaml" />
      </ResourceDictionary.MergedDictionaries>

      <sys:Int32 x:Key="SomeNumber">5</sys:Int32>
      <Path x:Key="PlayerTagIcon" x:Shared="False" Width="10" Height="10" Margin="0 1 4 0" HorizontalAlignment="Center" VerticalAlignment="Center"
          DockPanel.Dock="Left" Stretch="Fill"
          Data="F1 M 24.5416,19L 33.25,19L 55.4167,41.1667C 56.6533,42.4033 56.6533,44.4083 55.4167,45.645L 45.645,55.4167C 44.4084,56.6533 42.4033,56.6533 41.1667,55.4167L 19,33.25L 19,24.5417C 19,22.6945 19,20.8472 19.9236,19.9236C 20.8472,19 22.6944,19 24.5416,19 Z M 26.9167,23.75C 25.1678,23.75 23.75,25.1678 23.75,26.9167C 23.75,28.6656 25.1678,30.0833 26.9167,30.0833C 28.6656,30.0833 30.0833,28.6656 30.0833,26.9167C 30.0833,25.1678 28.6656,23.75 26.9167,23.75 Z" />

      <DataTemplate x:Key="CarItemDataTemplate" DataType="{x:Type t:ServerEntry+CarEntry}">
        <DockPanel HorizontalAlignment="Left" c:ContextMenus.Car="{Binding CarObject}" c:ToolTips.Car="{Binding CarObject}"
            mui:Draggable.Data="{Binding CarObject}">
          <Border DockPanel.Dock="Left"
              Visibility="{Binding ShowBrandBadges, Source={x:Static t:SettingsHolder.Online}, Converter={StaticResource BooleanToVisibilityConverter}}">
            <mui:BetterImage Filename="{Binding CarObject.BrandBadge}" Width="16" Height="16" Margin="0 0 4 0"
                Visibility="{Binding CarObject, Converter={StaticResource NullToVisibilityConverter}, ConverterParameter=inverse}" />
          </Border>
          <TextBlock DockPanel.Dock="Right" Visibility="{Binding Total, Converter={StaticResource MoreToVisibilityConverter}}">
            <Run Text=" (" /><Run Text="{Binding Available, Mode=OneWay}" /><Run Text="/" /><Run Text="{Binding Total, Mode=OneWay}" /><Run Text=")" />
          </TextBlock>
          <mui:BbCodeBlock Mode="WithoutBbCodes" Text="{Binding DisplayName}" TextTrimming="CharacterEllipsis" />
        </DockPanel>

        <DataTemplate.Triggers>
          <DataTrigger Binding="{Binding IsAvailable}" Value="False">
            <Setter Property="TextBlock.Foreground" Value="{DynamicResource ItemTextDisabled}" />
          </DataTrigger>
        </DataTemplate.Triggers>
      </DataTemplate>
    </ResourceDictionary>
  </UserControl.Resources>

  <DockPanel Background="Transparent" Margin="16 0 16 0">
    <c:AcToolBar x:Name="ToolBar" IsActive="True" DockPanel.Dock="Bottom" Panel.ZIndex="1">
      <ToolBar ToolBarTray.IsLocked="True" Band="0" BandIndex="0">
        <Button Content="{x:Static g:AppStrings.Toolbar_Refresh}" ToolTip="{x:Static g:AppStrings.Toolbar_Refresh_OnlineTooltip}"
            Command="{Binding Entry.RefreshCommand}" />
        <Separator />

        <mui:ButtonWithComboBox x:Name="ListsButton" Command="{Binding Entry.ToggleFavouriteCommand}" PreviewMouseDown="ListsButton_OnPreviewMouseDown"
            Content="{mui:BooleanBinding Entry.IsFavourite, TrueValue={x:Static mui:UiStrings.Toolbar_Unfavourite}, FalseValue={x:Static mui:UiStrings.Toolbar_Favourite}}"
            ButtonToolTip="{mui:BooleanBinding Entry.IsFavourite, TrueValue={x:Static mui:UiStrings.Toolbar_Unfavourite_Tooltip}, FalseValue={x:Static mui:UiStrings.Toolbar_Favourite_Tooltip}}">
          <MenuItem InputGestureText="Ctrl+Shift+H" Command="{Binding Entry.ToggleHiddenCommand}" StaysOpenOnClick="True"
              Header="{mui:BooleanBinding Entry.IsExcluded, TrueValue={x:Static mui:UiStrings.Toolbar_Unhide}, FalseValue={x:Static mui:UiStrings.Toolbar_Hide}}"
              ToolTip="{mui:BooleanBinding Entry.IsExcluded, TrueValue={x:Static mui:UiStrings.Toolbar_Unhide_Tooltip}, FalseValue={x:Static mui:UiStrings.Toolbar_Hide_Tooltip}}" />
          <Separator />
          <MenuItem Header="{x:Static mui:UiStrings.Toolbar_OnlineManageLists}" InputGestureText="Ctrl+Shift+D" Command="{Binding ManageListsCommand}" />
        </mui:ButtonWithComboBox>
        <mui:ButtonWithComboBox Content="{x:Static mui:UiStrings.Toolbar_Invite}" Command="{Binding InviteCommand}"
            ToolTip="{x:Static mui:UiStrings.Toolbar_Invite_Tooltip}">
          <MenuItem Header="{x:Static mui:UiStrings.Toolbar_Invite_IncludePasswordHeader}" IsChecked="{Binding CopyPasswordToInviteLink}" IsCheckable="True"
              IsEnabled="{Binding Entry.PasswordRequired}" StaysOpenOnClick="True" />
        </mui:ButtonWithComboBox>

        <!-- TODO -->
        <Button Content="{x:Static g:AppStrings.Drive_OnlineServer_JoinTSServer}" Command="{Binding JoinTsCommand}"
            Visibility="{Binding JoinTsCommand.IsAbleToExecute, Converter={StaticResource BooleanToVisibilityConverter}}" />
        <Separator />
        <mui:ButtonWithComboBox Content="{x:Static g:AppStrings.Toolbar_Drive}" Command="{Binding QuickDriveButton.DriveCommand}"
            PreviewMouseDown="OnDriveButtonMouseDown" Style="{StaticResource ToolBarButtonWithComboBox}">
          <mui:ButtonWithComboBox.Resources>
            <CollectionViewSource x:Key="QuickDrivePresetsItems" Source="{Binding QuickDriveButton.Presets}" />
          </mui:ButtonWithComboBox.Resources>
          <mui:ButtonWithComboBox.ButtonToolTip>
            <StackPanel>
              <TextBlock Text="{x:Static g:AppStrings.Toolbar_QuickDrive_FirstLine}" />
              <TextBlock Text="{x:Static g:AppStrings.Toolbar_QuickDrive_SecondLine}" />
            </StackPanel>
          </mui:ButtonWithComboBox.ButtonToolTip>
          <mui:ButtonWithComboBox.MenuItems>
            <CompositeCollection>
              <CollectionContainer Collection="{Binding Source={StaticResource QuickDrivePresetsItems}}" />
            </CompositeCollection>
          </mui:ButtonWithComboBox.MenuItems>
        </mui:ButtonWithComboBox>
      </ToolBar>
      <ToolBar ToolBarTray.IsLocked="True" Band="1" BandIndex="1">
        <mui:AsyncButton Command="{Binding Entry.InstallMissingContentCommand}"
            Visibility="{Binding Entry.IsInstallMissingContentCommandAvailable, Converter={StaticResource BooleanToVisibilityConverter}}">
          <DockPanel>
            <Path Data="{StaticResource DownloadIconData}" Stretch="Uniform" Fill="{DynamicResource Accent}" Margin="0 0 6 -1" VerticalAlignment="Center"
                Width="12" Height="12" />
            <TextBlock Text="{Binding Entry.IsAbleToInstallMissingContentState_Max, Converter={StaticResource EnumToDescriptionConverter}}" />
          </DockPanel>
        </mui:AsyncButton>

        <ToggleButton x:Name="AssistsButton" Content="{x:Static t:ToolsStrings.Assists_Title}"
            IsHitTestVisible="{Binding ElementName=AssistsPopup, Path=IsOpen, Mode=OneWay, Converter={StaticResource InvertBooleanConverter}}">
          <ToggleButton.ToolTip>
            <c:AssistsDescription x:Name="AssistsDescription" />
          </ToggleButton.ToolTip>
        </ToggleButton>

        <c:ModernPopup x:Name="AssistsPopup" PlacementTarget="{Binding ElementName=AssistsButton}" Placement="Top"
            IsOpen="{Binding IsChecked, ElementName=AssistsButton, Mode=TwoWay}" Padding="16 12 16 16">
          <uc:AssistsEditor />
        </c:ModernPopup>

        <mui:BooleanSwitch Value="{Binding IsBooked}" DataContext="{Binding Entry}">
          <mui:BooleanSwitch.True>
            <Button Content="{x:Static mui:UiStrings.Toolbar_OnlineCancelBooking}" Command="{Binding CancelBookingCommand}" />
          </mui:BooleanSwitch.True>
          <mui:BooleanSwitch.False>
            <Button Command="{Binding JoinCommand}" Style="{StaticResource Go.ToolBarButton}"
                Visibility="{Binding IsBooked, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter=inverse}">
              <Button.Content>
                <mui:BooleanSwitch Value="{Binding PasswordIsMissing}">
                  <mui:BooleanSwitch.True>
                    <TextBlock Text="{Binding Source={x:Static g:AppStrings.Toolbar_Join}, StringFormat='{}{0} (password required)'}" />
                  </mui:BooleanSwitch.True>
                  <mui:BooleanSwitch.False>
                    <TextBlock Text="{x:Static g:AppStrings.Toolbar_Join}" />
                  </mui:BooleanSwitch.False>
                </mui:BooleanSwitch>
              </Button.Content>
              <Button.ToolTip>
                <mui:BooleanSwitch Value="{Binding IsAvailable}">
                  <mui:BooleanSwitch.True>
                    <TextBlock Text="{x:Static g:AppStrings.Toolbar_Join_OnlineTooltip}" />
                  </mui:BooleanSwitch.True>
                  <mui:BooleanSwitch.False>
                    <TextBlock Text="{Binding NonAvailableReasonsString, StringFormat='{}{0} (press Ctrl+Alt+G to connect anyway)'}" />
                  </mui:BooleanSwitch.False>
                </mui:BooleanSwitch>
              </Button.ToolTip>
            </Button>
          </mui:BooleanSwitch.False>
        </mui:BooleanSwitch>

        <Separator Visibility="{Binding Entry.AutoJoinAvailable, Converter={StaticResource BooleanToVisibilityConverter}}" />
        <Button Content="{x:Static g:AppStrings.Drive_OnlineServer_WaitForThisCar}" ToolTip="{x:Static g:AppStrings.Drive_OnlineServer_WaitForThisCar_Tooltip}"
            Visibility="{Binding Entry.AutoJoinAvailable, Converter={StaticResource BooleanToVisibilityConverter}}" Command="{Binding StartAutoJoinCommand}"
            CommandParameter="False" />
        <Button Content="{x:Static g:AppStrings.Drive_OnlineServer_WaitForAnyCar}" ToolTip="{x:Static g:AppStrings.Drive_OnlineServer_WaitForAnyCar_Tooltip}"
            Visibility="{Binding Entry.AutoJoinAnyCarAvailable, Converter={StaticResource BooleanToVisibilityConverter}}"
            Command="{Binding StartAutoJoinCommand}" CommandParameter="True" />
      </ToolBar>
    </c:AcToolBar>

    <!-- Server's name -->
    <DockPanel DockPanel.Dock="Top" DataContext="{Binding Entry}">
      <DockPanel Margin="0 4 0 20" DockPanel.Dock="Bottom" Height="18">
        <!-- Origin-related icons -->
        <Border Visibility="{Binding IsExcluded, Converter={StaticResource BooleanToVisibilityConverter}}" Margin="0 0 4 0" DockPanel.Dock="Left">
          <StaticResource ResourceKey="HiddenIcon" />
        </Border>
        <Border Visibility="{Binding FromKunosList, Converter={StaticResource BooleanToVisibilityConverter}}" Margin="0 0 4 0" DockPanel.Dock="Left">
          <StaticResource ResourceKey="KunosIcon" />
        </Border>
        <Border Visibility="{Binding FromThirdPartyList, Converter={StaticResource BooleanToVisibilityConverter}}" Margin="0 0 4 0" DockPanel.Dock="Left">
          <StaticResource ResourceKey="ThirdPartyIcon" />
        </Border>
        <Border Visibility="{Binding FromMinoratingList, Converter={StaticResource BooleanToVisibilityConverter}}" Margin="0 0 4 0" DockPanel.Dock="Left">
          <StaticResource ResourceKey="MinoratingIcon" />
        </Border>
        <Border Visibility="{Binding FromLan, Converter={StaticResource BooleanToVisibilityConverter}}" Margin="0 0 4 0" DockPanel.Dock="Left">
          <StaticResource ResourceKey="LanIcon" />
        </Border>
        <Border Visibility="{Binding WasUsedRecently, Converter={StaticResource BooleanToVisibilityConverter}}" Margin="0 0 4 0" DockPanel.Dock="Left">
          <StaticResource ResourceKey="RecentIcon" />
        </Border>

        <!-- Custom icons -->
        <StackPanel x:Name="IconsPanel" Orientation="Horizontal" DockPanel.Dock="Left" />

        <StackPanel DockPanel.Dock="Right" Orientation="Horizontal" VerticalAlignment="Center"
            Visibility="{Binding Ping, Converter={StaticResource NullToVisibilityConverter}, ConverterParameter=inverse}" Background="Transparent">
          <StackPanel.ToolTip>
            <ToolTip Content="{Binding FrequencyHz}" ContentStringFormat="{}Frequency: {0} Hz"
                Visibility="{Binding FrequencyHz, Converter={StaticResource EnumToVisibilityConverter}, ConverterParameter=≠0}" />
          </StackPanel.ToolTip>
          <TextBlock Text="{Binding Ping, TargetNullValue='?'}" Style="{StaticResource Small}" />
          <TextBlock Text="{x:Static c:ControlsStrings.Common_MillisecondsPostfix}" Opacity="0.5" Style="{StaticResource Small}" />
        </StackPanel>

        <!-- IP, port -->
        <TextBox Style="{StaticResource TextBoxAsTextBlock.Small.ReadOnly}" VerticalAlignment="Center" Text="{Binding Id, Mode=OneWay}" />
      </DockPanel>
      <c:FavouriteButton DockPanel.Dock="Right" Margin="4 0 0 0" IsChecked="{Binding IsFavourite, Mode=TwoWay}" />
      <mui:SelectableBbCodeBlock x:Name="Title" Text="{Binding DisplayName, Mode=OneWay}" Style="{StaticResource RichTextBox.Heading2.ReadOnly}" />
    </DockPanel>

    <mui:Switch Value="{Binding Entry.Status}">
      <!-- Just in case -->
      <Border mui:Switch.When="{x:Static t:ServerStatus.Unloaded}" VerticalAlignment="Center" />

      <!-- Loading -->
      <StackPanel mui:Switch.When="{x:Static t:ServerStatus.Loading}" VerticalAlignment="Center">
        <ProgressBar Maximum="1" Value="{Binding Entry.UpdateProgress.Progress, Mode=OneWay}" Margin="8 0 8 8" Height="4"
            IsIndeterminate="{Binding Entry.UpdateProgress.IsIndeterminate}" />
        <TextBlock TextAlignment="Center" Style="{StaticResource Small}" Text="{Binding Entry.UpdateProgress.Message}" />
      </StackPanel>

      <!-- Error -->
      <StackPanel mui:Switch.When="{x:Static t:ServerStatus.Error}">
        <DockPanel HorizontalAlignment="Stretch">
          <Path Data="{StaticResource AlertIconData}" Width="16" Height="16" Fill="{DynamicResource Error}" Stretch="Uniform" DockPanel.Dock="Right" />
          <TextBlock Margin="10 2 2 2" Style="{StaticResource Heading2}"
              Text="{Binding Source={StaticResource SomeNumber}, Converter={StaticResource PluralizingConverter}, ConverterParameter={x:Static c:ControlsStrings.AcObject_ErrorsHeader}}" />
        </DockPanel>

        <mui:SelectableBbCodeBlock Text="{Binding Entry.ErrorsString}" Margin="20 0 0 12" />
        <Button Command="{Binding Entry.RefreshCommand}" Content="{x:Static c:ControlsStrings.Common_TryAgain}" Margin="20 0 0 0" />
      </StackPanel>

      <!-- Content -->
      <DockPanel>
        <!-- Extended list and stats -->
        <DockPanel x:Name="ExtendedInformation" DockPanel.Dock="Right" Width="220" Visibility="Collapsed" DataContext="{Binding Entry}">
          <Border DockPanel.Dock="Bottom" Margin="8 0 0 20">
            <mui:ReferenceSwitch Value="{Binding LastConnected}" VerticalAlignment="Top">
              <mui:ReferenceSwitch.NonNull>
                <c:PropertiesGrid Margin="0 20 0 0" Columns="1" TextBlock.FontSize="{DynamicResource SmallFontSize}" LabelWidth="70" Background="Transparent">
                  <c:PropertiesGrid.ContextMenu>
                    <ContextMenu>
                      <MenuItem Command="{Binding ResetStatsCommand}" Header="{x:Static g:AppStrings.Drive_OnlineServer_ResetStats}">
                        <MenuItem.Icon>
                          <Path Width="10" Height="10" Margin="0 2 0 0" Stretch="Uniform" Data="{StaticResource RemoveIconData}" HorizontalAlignment="Right"
                              VerticalAlignment="Center" Fill="{Binding Path=(Control.Foreground), RelativeSource={RelativeSource Self}}" />
                        </MenuItem.Icon>
                      </MenuItem>
                      <MenuItem Click="OnShareStatsItemClick" Header="{x:Static g:AppStrings.Drive_OnlineServer_GetLinkToStats}">
                        <MenuItem.Icon>
                          <Path Width="10" Height="10" Margin="0 2 0 0" Stretch="Uniform" Data="{StaticResource ShareIconData}" HorizontalAlignment="Right"
                              VerticalAlignment="Center" Fill="{Binding Path=(Control.Foreground), RelativeSource={RelativeSource Self}}" />
                        </MenuItem.Icon>
                      </MenuItem>
                    </ContextMenu>
                  </c:PropertiesGrid.ContextMenu>
                  <mui:TimePassedBlock c:PropertiesGrid.Label="Last joined:" From="{Binding LastConnected}" />
                  <mui:TimePassedBlock c:PropertiesGrid.Label="Counting stats from:" From="{Binding CountingStatsFrom}"
                      Visibility="{Binding CountingStatsFrom, Converter={StaticResource NullToVisibilityConverter}, ConverterParameter=inverse}" />
                  <TextBlock c:PropertiesGrid.Label="Sessions:" Text="{Binding Stats.SessionsCount}"
                      Visibility="{Binding Stats.SessionsCount, Converter={StaticResource EnumToVisibilityConverter}, ConverterParameter='≠0'}" />
                  <TextBlock c:PropertiesGrid.Label="Total driven:"
                      Text="{Binding Stats.DistanceKm, Converter={StaticResource MultiplyConverter}, ConverterParameter={x:Static t:SettingsHolder+CommonSettings.DistanceMultiplier}, StringFormat={x:Static t:SettingsHolder+CommonSettings.DistanceFormat}}"
                      Visibility="{Binding Stats.DistanceKm, Converter={StaticResource EnumToVisibilityConverter}, ConverterParameter='≠0'}" />
                  <TextBlock c:PropertiesGrid.Label="Max speed:"
                      Text="{Binding Stats.MaxSpeed, Converter={StaticResource MultiplyConverter}, ConverterParameter={x:Static t:SettingsHolder+CommonSettings.DistanceMultiplier}, StringFormat={x:Static t:SettingsHolder+CommonSettings.SpeedFormat}}"
                      Visibility="{Binding Stats.MaxSpeed, Converter={StaticResource EnumToVisibilityConverter}, ConverterParameter='≠0'}" />
                  <TextBlock c:PropertiesGrid.Label="Avg speed:"
                      Text="{Binding Stats.AverageSpeed, Converter={StaticResource MultiplyConverter}, ConverterParameter={x:Static t:SettingsHolder+CommonSettings.DistanceMultiplier}, StringFormat={x:Static t:SettingsHolder+CommonSettings.SpeedFormat}}"
                      Visibility="{Binding Stats.MaxSpeed, Converter={StaticResource EnumToVisibilityConverter}, ConverterParameter='≠0'}" />
                  <TextBlock c:PropertiesGrid.Label="Crashes:" Text="{Binding Stats.TotalCrashes}"
                      Visibility="{Binding Stats.TotalCrashes, Converter={StaticResource EnumToVisibilityConverter}, ConverterParameter='≠0'}" />
                </c:PropertiesGrid>
              </mui:ReferenceSwitch.NonNull>
            </mui:ReferenceSwitch>
          </Border>
          <ListBox x:Name="CarsListBox" Style="{StaticResource VirtualizingListBox}" SelectionChanged="OnCarsComboBoxSelectionChanged"
              ItemTemplate="{StaticResource CarItemDataTemplate}" Margin="8 0 -16 0" TextSearch.TextPath="DisplayName" />
        </DockPanel>

        <ScrollViewer x:Name="ScrollViewer" Padding="0 0 8 8" Margin="0 0 -8 0" mui:FancyScroll.Outside="True">
          <DockPanel DataContext="{Binding Entry}">
            <StackPanel DockPanel.Dock="Top" Margin="0 0 0 20" Visibility="{Binding Errors.Count, Converter={StaticResource MoreToVisibilityConverter}}"
                x:Name="ErrorsPanel">
              <DockPanel HorizontalAlignment="Stretch">
                <Path Data="{StaticResource AlertIconData}" Width="16" Height="16" Fill="{DynamicResource Error}" Stretch="Uniform" DockPanel.Dock="Right" />
                <TextBlock Margin="10 2 2 2" Style="{StaticResource Heading2}"
                    Text="{Binding Source={StaticResource SomeNumber}, Converter={StaticResource PluralizingConverter}, ConverterParameter={x:Static c:ControlsStrings.AcObject_ErrorsHeader}}" />
              </DockPanel>

              <!-- <TextBlock Style="{StaticResource Heading1}" Text="{x:Static c:ControlsStrings.Common_Error}" /> -->
              <mui:SelectableBbCodeBlock Text="{Binding ErrorsString}" Margin="40 0 0 12"
                  mui:FancyHintsService.Hint="{Binding Id, Source={x:Static c:FancyHints.CupV2IndexedContent}, Mode=OneTime}"
                  mui:FancyHintsService.HorizontalAlignment="Left" mui:FancyHintsService.VerticalAlignment="Top"
                  mui:FancyHintsService.OffsetY="20" mui:FancyHintsService.OffsetX="20" Loaded="OnErrorsBlockLoaded" />

              <mui:BooleanSwitch Value="{Binding IsInstallMissingContentCommandAvailable}" Margin="20 0 0 0" DockPanel.Dock="Top">
                <mui:BooleanSwitch.False>
                  <mui:AsyncButton Command="{Binding RefreshCommand}">
                    <DockPanel>
                      <Path Data="{StaticResource RefreshIconData}" Stretch="Uniform" Width="12" Height="12"
                          Fill="{Binding Path=(TextBlock.Foreground), RelativeSource={RelativeSource Self}}" Margin="0 0 6 -1" VerticalAlignment="Center" />
                      <TextBlock Text="{x:Static c:ControlsStrings.Common_TryAgain}" />
                    </DockPanel>
                  </mui:AsyncButton>
                </mui:BooleanSwitch.False>
                <mui:BooleanSwitch.True>
                  <DockPanel>
                    <mui:AsyncButton Command="{Binding RefreshCommand}">
                      <DockPanel>
                        <Path Data="{StaticResource RefreshIconData}" Stretch="Uniform" Width="12" Height="12"
                            Fill="{Binding Path=(TextBlock.Foreground), RelativeSource={RelativeSource Self}}" Margin="0 0 6 -1" VerticalAlignment="Center" />
                        <TextBlock Text="{x:Static c:ControlsStrings.Common_TryAgain}" />
                      </DockPanel>
                    </mui:AsyncButton>
                    <mui:AsyncButton Margin="8 0 0 0" Command="{Binding InstallMissingContentCommand}">
                      <DockPanel>
                        <Path Data="{StaticResource DownloadIconData}" Stretch="Uniform" Fill="{DynamicResource Accent}" Margin="0 0 6 -1"
                            VerticalAlignment="Center" Width="12" Height="12" />
                        <TextBlock Text="{Binding IsAbleToInstallMissingContentState_Max, Converter={StaticResource EnumToDescriptionConverter}}" />
                      </DockPanel>
                    </mui:AsyncButton>
                  </DockPanel>
                </mui:BooleanSwitch.True>
              </mui:BooleanSwitch>
            </StackPanel>

            <!-- Password -->
            <mui:BooleanSwitch DockPanel.Dock="Top" Value="{Binding PasswordRequired}" x:Name="PasswordPanel" Margin="0 6 1 0">
              <mui:BooleanSwitch.True>
                <DockPanel Margin="0 0 0 20" ToolTip="{x:Static c:ControlsStrings.Online_PasswordRequired}">
                  <Path Data="{StaticResource LockIconData}" Width="16" Height="16" Fill="{DynamicResource WindowText}" Stretch="Uniform" Margin="0 0 6 0" />
                  <TextBlock DockPanel.Dock="Left" Text="{x:Static g:AppStrings.Online_PasswordLabel}" Style="{StaticResource Heading2}" Margin="0 0 16 0" />
                  <mui:ProperPasswordBox FontSize="16"
                      Password="{Binding Password, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                      Style="{StaticResource ProperPasswordBox.Borderless}" Margin="0 0 4 0" />
                </DockPanel>
              </mui:BooleanSwitch.True>
              <mui:BooleanSwitch.False>
                <DockPanel Margin="0 0 0 20"
                    Visibility="{Binding AlwaysAllowToUsePassword, Source={x:Static t:SettingsHolder.Online}, Converter={StaticResource BooleanToVisibilityConverter}}">
                  <mui:ContextMenuButton DockPanel.Dock="Right" PropagateToChildren="True">
                    <ContextMenu>
                      <MenuItem Header="{x:Static t:ToolsStrings.Online_ShowAdminPasswordInputHeader}"
                          ToolTip="{x:Static t:ToolsStrings.Online_ShowAdminPasswordInput_Tooltip}" IsCheckable="True"
                          IsChecked="{Binding AlwaysAllowToUsePassword, Source={x:Static t:SettingsHolder.Online}}" />
                    </ContextMenu>
                  </mui:ContextMenuButton>
                  <Path DockPanel.Dock="Left" Data="{StaticResource ToolsIconData}" Width="16" Height="16" Fill="{DynamicResource WindowText}"
                      Stretch="Uniform" Margin="0 0 6 0" />
                  <TextBlock DockPanel.Dock="Left" Text="{x:Static t:ToolsStrings.Online_AdminPassword}" Style="{StaticResource Heading2}" Margin="0 0 16 0" />
                  <mui:ProperPasswordBox FontSize="16"
                      Password="{Binding Password, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                      Style="{StaticResource ProperPasswordBox.Borderless}" Margin="0 0 4 0" />
                </DockPanel>
              </mui:BooleanSwitch.False>
            </mui:BooleanSwitch>

            <StackPanel DockPanel.Dock="Top" Visibility="{Binding TrackId, Converter={StaticResource NullToVisibilityConverter}, ConverterParameter=inverse}"
                x:Name="DataPanel">
              <!-- Track & car -->
              <mui:SpacingUniformGrid Height="160" Rows="1" HorizontalSpacing="8">
                <!-- Track block -->
                <mui:Cell ClipToBounds="True" Background="{DynamicResource CardBackground}" c:ContextMenus.Track="{Binding Track}"
                    c:ToolTips.Track="{Binding Track}">
                  <mui:BetterImage Filename="{Binding Track.PreviewImage}" Stretch="UniformToFill" c:ImageViewerService.Image="{Binding Track.PreviewImage}" />
                  <mui:BetterImage Filename="{Binding Track.OutlineImage}" ShowBroken="False" IsHitTestVisible="False" />
                  <DockPanel Background="{DynamicResource DarkStripeBackground}" VerticalAlignment="Bottom"
                      TextBlock.Foreground="{DynamicResource DarkStripeText}">
                    <mui:ContextMenuButton Padding="2 0 6 0" DockPanel.Dock="Right" LookForParentMenu="True" />
                    <TextBlock Text="{Binding Track.Name}" Padding="4" />
                  </DockPanel>
                  <mui:Cell Visibility="{Binding Track, Converter={StaticResource NullToVisibilityConverter}}" Background="{DynamicResource CardBackground}">
                    <TextBlock Style="{StaticResource Heading1}" Text="{x:Static g:AppStrings.Drive_OnlineServer_TrackIsMissing}"
                        Foreground="{DynamicResource CardHeaderTextDisabled}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0 0 0 20" />
                    <TextBlock Padding="4" VerticalAlignment="Bottom" Background="{DynamicResource DarkStripeBackground}" Text="{Binding TrackId}"
                        Foreground="{DynamicResource ItemTextDisabled}" IsHitTestVisible="False" />
                  </mui:Cell>
                </mui:Cell>

                <!-- Car block -->
                <mui:Cell ClipToBounds="True" Background="{DynamicResource CardBackground}" c:ContextMenus.Car="{Binding SelectedCarEntry.CarObject}"
                    c:ContextMenus.CarSkin="{Binding SelectedCarEntry.AvailableSkin}" c:ToolTips.Car="{Binding SelectedCarEntry.CarObject}">
                  <!-- Preview -->
                  <mui:BetterImage Stretch="UniformToFill" Filename="{Binding SelectedCarEntry.PreviewImage}"
                      c:ImageViewerService.Image="{Binding SelectedCarEntry.PreviewImage}" HorizontalAlignment="Center" />
                  <Border Visibility="{Binding SelectedCarEntry.CarObject, Converter={StaticResource NullToVisibilityConverter}}"
                      Background="{DynamicResource CardBackground}">
                    <TextBlock Style="{StaticResource Heading1}" Text="{x:Static g:AppStrings.Drive_OnlineServer_CarIsMissing}"
                        Foreground="{DynamicResource CardHeaderTextDisabled}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0 0 0 20" />
                  </Border>

                  <Border Background="Transparent" Width="16" Height="16" HorizontalAlignment="Right" Margin="8" VerticalAlignment="Top"
                      Visibility="{Binding SelectedCarEntry.CspOptions, Converter={StaticResource NullToVisibilityConverter}, ConverterParameter=inverse}">
                    <Border.ToolTip>
                      <mui:BbCodeBlock Text="{Binding SelectedCarEntry.CspOptions.Description}" Mode="Extended" />
                    </Border.ToolTip>
                    <Path Data="{StaticResource BulbIconData}" Fill="{Binding Path=(TextBlock.Foreground), RelativeSource={RelativeSource Self}}"
                        Stretch="Uniform" />
                  </Border>

                  <!-- Selection ComboBox -->
                  <mui:BooleanSwitch>
                    <mui:BooleanSwitch.Value>
                      <MultiBinding Converter="{StaticResource OrConverter}">
                        <Binding Path="FixedCar" />
                        <Binding Path="Visibility" Source="{x:Reference ExtendedInformation}" Converter="{StaticResource EnumToBooleanConverter}"
                            ConverterParameter="Visible" />
                      </MultiBinding>
                    </mui:BooleanSwitch.Value>
                    <mui:BooleanSwitch.True>
                      <Border Background="{DynamicResource DarkStripeBackground}" Padding="4" VerticalAlignment="Bottom">
                        <DockPanel DataContext="{Binding SelectedCarEntry}">
                          <Border DockPanel.Dock="Left"
                              Visibility="{Binding ShowBrandBadges, Source={x:Static t:SettingsHolder.Online}, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <mui:BetterImage Filename="{Binding CarObject.BrandBadge}" Width="16" Height="16" Margin="0 0 4 0"
                                Visibility="{Binding CarObject, Converter={StaticResource NullToVisibilityConverter}, ConverterParameter=inverse}" />
                          </Border>
                          <mui:ContextMenuButton VerticalAlignment="Center" Padding="6 0 6 0" Margin="0 -4 -4 -4" DockPanel.Dock="Right"
                              LookForParentMenu="True" />
                          <mui:BbCodeBlock Mode="WithoutBbCodes" Text="{Binding DisplayName}" />
                        </DockPanel>
                        <Border.Style>
                          <Style TargetType="Border">
                            <Setter Property="TextBlock.Foreground" Value="{DynamicResource DarkStripeText}" />
                            <Style.Triggers>
                              <DataTrigger Binding="{Binding SelectedCarEntry.CarObject}" Value="{x:Null}">
                                <Setter Property="TextBlock.Foreground" Value="{DynamicResource ItemTextDisabled}" />
                              </DataTrigger>
                            </Style.Triggers>
                          </Style>
                        </Border.Style>
                      </Border>
                    </mui:BooleanSwitch.True>
                    <mui:BooleanSwitch.False>
                      <ComboBox x:Name="CarsComboBox" SelectionChanged="OnCarsComboBoxSelectionChanged" Background="{DynamicResource DarkStripeBackground}"
                          Foreground="{DynamicResource DarkStripeText}" Padding="4" VerticalAlignment="Bottom" BorderThickness="0"
                          ItemTemplate="{StaticResource CarItemDataTemplate}"
                          mui:FancyHintsService.Hint="{Binding Id, Source={x:Static c:FancyHints.OnlineCarContextMenu}}"
                          mui:FancyHintsService.HorizontalContentAlignment="Right" mui:FancyHintsService.VerticalContentAlignment="Top"
                          mui:FancyHintsService.TriggerOnLoad="True" />
                    </mui:BooleanSwitch.False>
                  </mui:BooleanSwitch>
                </mui:Cell>
              </mui:SpacingUniformGrid>

              <!-- Skins list -->
              <Border
                  Visibility="{Binding CurrentSessionType, Converter={StaticResource EnumToVisibilityConverter}, ConverterParameter={x:Static p:Game+SessionType.Booking}}">
                <StackPanel Margin="0 20 0 0"
                    Visibility="{Binding SelectedCarEntry.CarObject,Converter={StaticResource NullToVisibilityConverter}, ConverterParameter=inverse }">
                  <TextBlock Style="{StaticResource Label.Padding}" Text="{x:Static g:AppStrings.Drive_OnlineServer_SkinForBooking}" />
                  <ListBox DataContext="{Binding SelectedCarEntry}" ItemsSource="{Binding CarObject.EnabledSkinsListView}"
                      ScrollViewer.VerticalScrollBarVisibility="Disabled" ScrollViewer.CanContentScroll="True" IsSynchronizedWithCurrentItem="False"
                      SelectedItem="{Binding AvailableSkin}" MaxHeight="36" ItemTemplate="{StaticResource CarSkinItemTemplate}"
                      VirtualizingPanel.IsVirtualizing="True" VirtualizingPanel.VirtualizationMode="Recycling" VirtualizingPanel.ScrollUnit="Pixel"
                      SelectionChanged="SkinsList_OnSelectionChanged" Margin="-2 6 -2 0">
                    <ListBox.ItemsPanel>
                      <ItemsPanelTemplate>
                        <VirtualizingStackPanel Orientation="Horizontal" VirtualizationMode="Recycling" IsVirtualizing="True" />
                      </ItemsPanelTemplate>
                    </ListBox.ItemsPanel>
                  </ListBox>
                </StackPanel>
              </Border>

              <!-- Common properties -->
              <c:PropertiesGrid Margin="0 20 0 0" Visibility="{Binding Time, Converter={StaticResource NullToVisibilityConverter}, ConverterParameter=inverse}">
                <DockPanel c:PropertiesGrid.Label="{x:Static c:ControlsStrings.AcObject_ContryLabel}" HorizontalAlignment="Left" Background="Transparent">
                  <DockPanel.ToolTip>
                    <ToolTip>
                      <mui:ReferenceSwitch Value="{Binding City}">
                        <mui:ReferenceSwitch.Null>
                          <TextBlock Text="{Binding Country}" />
                        </mui:ReferenceSwitch.Null>
                        <mui:ReferenceSwitch.NonNull>
                          <TextBlock>
                            <TextBlock.Text>
                              <MultiBinding StringFormat="{}{0}, {1}">
                                <Binding Path="City" TargetNullValue="?" />
                                <Binding Path="Country" TargetNullValue="?" />
                              </MultiBinding>
                            </TextBlock.Text>
                          </TextBlock>
                        </mui:ReferenceSwitch.NonNull>
                      </mui:ReferenceSwitch>
                    </ToolTip>
                  </DockPanel.ToolTip>
                  <c:CountryIcon Country="{Binding CountryId}" HorizontalAlignment="Right" Width="24" Height="16" DockPanel.Dock="Right"
                      RenderOptions.BitmapScalingMode="LowQuality" Margin="4 -6 0 0" VerticalAlignment="Bottom" />
                  <TextBlock Text="{Binding Country}" TextWrapping="NoWrap" TextTrimming="CharacterEllipsis" />
                </DockPanel>
                <TextBlock c:PropertiesGrid.Label="{x:Static g:AppStrings.Online_ClientsLabel}" Text="{Binding DisplayClients}" />
                <TextBlock c:PropertiesGrid.Label="CSP features" Text="{Binding DisplayCspFeatures}" TextTrimming="CharacterEllipsis"
                    Visibility="{Binding DisplayCspFeatures, Converter={StaticResource NullToVisibilityConverter}, ConverterParameter=inverse}">
                  <TextBlock.ToolTip>
                    <ItemsControl ItemsSource="{Binding CspFeaturesList}">
                      <ItemsControl.ItemTemplate>
                        <DataTemplate>
                          <TextBlock Text="{Binding}" />
                        </DataTemplate>
                      </ItemsControl.ItemTemplate>
                    </ItemsControl>
                  </TextBlock.ToolTip>
                </TextBlock>
                <TextBlock c:PropertiesGrid.Label="{x:Static g:AppStrings.Online_TimeLabel}" Text="{Binding Time}"
                    Visibility="{Binding DisplayCspFeatures, Converter={StaticResource NullToVisibilityConverter}}" />
                <TextBlock c:PropertiesGrid.Label="{x:Static g:AppStrings.Online_LeftLabel}" Text="{Binding DisplayTimeLeft}" />
              </c:PropertiesGrid>

              <!-- Conditions -->
              <StackPanel Visibility="{Binding ExtendedMode, Converter={StaticResource BooleanToVisibilityConverter}}" Margin="0 20 0 0">
                <c:PropertiesGrid Columns="2">
                  <mui:BbCodeBlock Mode="WithoutBbCodes" c:PropertiesGrid.Label="Weather:" Text="{Binding WeatherDisplayName}">
                    <FrameworkElement.ToolTip>
                      <ToolTip Visibility="{Binding WeatherObject, Converter={StaticResource NullToVisibilityConverter}, ConverterParameter=inverse}">
                        <mui:BetterImage Filename="{Binding WeatherObject.PreviewImage}" MaxWidth="400" />
                      </ToolTip>
                    </FrameworkElement.ToolTip>
                  </mui:BbCodeBlock>
                  <TextBlock c:PropertiesGrid.Label="Contacts:" ToolTip="{x:Static g:AppStrings.Drive_OnlineServer_MaximumOfContacts_Tooltip}"
                      Text="{Binding MaxContactsPerKm, StringFormat='{}{0:F1} per km', TargetNullValue='not limited'}" Background="Transparent" />
                  <c:TemperatureBlock c:PropertiesGrid.Label="Ambient:" Text="{Binding AmbientTemperature, TargetNullValue='?'}" Background="Transparent" />
                  <TextBlock c:PropertiesGrid.Label="Wind:" Background="Transparent">
                    <TextBlock.Text>
                      <MultiBinding StringFormat="{}{0:F0} km/h ({1})">
                        <Binding Path="WindSpeed" FallbackValue="?" TargetNullValue="?" />
                        <Binding Path="DisplayWindDirection" FallbackValue="?" TargetNullValue="?" />
                      </MultiBinding>
                    </TextBlock.Text>
                  </TextBlock>
                  <c:TemperatureBlock c:PropertiesGrid.Label="Road:" Text="{Binding RoadTemperature, TargetNullValue='?'}" Background="Transparent" />
                  <!-- TODO: Buggy resharper -->
                  <!-- ReSharper disable once Xaml.BindingWithContextNotResolved -->
                  <TextBlock c:PropertiesGrid.Label="Grip:" Text="{Binding Grip, StringFormat='{}{0:F1}%'}" Background="Transparent"
                      Visibility="{Binding Grip.HasValue, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <TextBlock.ToolTip>
                      <ToolTip Content="{Binding GripTransfer}" ContentStringFormat="{}Grip transfer: {0:F1}%" />
                    </TextBlock.ToolTip>
                  </TextBlock>
                </c:PropertiesGrid>
              </StackPanel>

              <!-- Description -->
              <mui:ReferenceSwitch Value="{Binding Description}">
                <mui:BbCodeBlock Text="{Binding Description}" Margin="0 20 0 0" TextWrapping="Wrap" />
              </mui:ReferenceSwitch>

              <!-- Sessions list -->
              <TextBlock Text="{x:Static g:AppStrings.Online_SessionsLabel}" Style="{StaticResource Label.Padding}" Margin="0 20 0 0" />
              <ItemsControl ItemsSource="{Binding Sessions}" Margin="20 8 0 20">
                <ItemsControl.ItemTemplate>
                  <DataTemplate DataType="{x:Type t:ServerEntry+Session}">
                    <DockPanel>
                      <TextBlock DockPanel.Dock="Left" Width="100" x:Name="TypeText" Text="{Binding DisplayType}" />
                      <TextBlock x:Name="DurationText" Text="{Binding DisplayDuration}" />
                    </DockPanel>

                    <DataTemplate.Triggers>
                      <DataTrigger Binding="{Binding IsActive}" Value="True">
                        <Setter TargetName="TypeText" Property="FontWeight" Value="Bold" />
                        <Setter TargetName="DurationText" Property="FontWeight" Value="Bold" />
                      </DataTrigger>
                    </DataTemplate.Triggers>
                  </DataTemplate>
                </ItemsControl.ItemTemplate>
              </ItemsControl>
            </StackPanel>

            <!-- Current drivers list -->
            <mui:Switch Value="{Binding CurrentDrivers.Count, FallbackValue=-1}"
                Visibility="{Binding TrackId, Converter={StaticResource NullToVisibilityConverter}, ConverterParameter=inverse}">
              <TextBlock mui:Switch.When="0" Text="{x:Static g:AppStrings.Drive_OnlineServer_ServerIsEmpty}" Style="{StaticResource Label.Padding}"
                  VerticalAlignment="Top" />

              <DockPanel>
                <TextBlock Style="{StaticResource Label.Padding}" DockPanel.Dock="Top" Foreground="{DynamicResource WindowText}"
                    Text="{Binding Path=ConnectedDrivers, Converter={StaticResource PluralizingConverter}, ConverterParameter={x:Static g:AppStrings.Online_DriversOnServer}}">
                </TextBlock>
                <ItemsControl ItemsSource="{Binding CurrentDrivers}">
                  <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                      <mui:SpacingUniformGrid Columns="2" VerticalAlignment="Top" HorizontalSpacing="8" Margin="0 0 0 20" VerticalStackMode="True" />
                    </ItemsPanelTemplate>
                  </ItemsControl.ItemsPanel>
                  <ItemsControl.ItemContainerStyle>
                    <Style>
                      <Setter Property="Control.Margin" Value="4" />
                    </Style>
                  </ItemsControl.ItemContainerStyle>
                  <ItemsControl.ItemTemplate>
                    <DataTemplate DataType="{x:Type t:ServerEntry+CurrentDriver}">
                      <DockPanel Background="Transparent">
                        <mui:ContextMenuButton DockPanel.Dock="Right" VerticalAlignment="Center" Click="OnDriverContextMenu" />

                        <mui:BetterImage Filename="{Binding CarSkin.LiveryImage}" Width="16" Height="16" Margin="0 0 4 0" ClearOnChange="True">
                          <mui:BetterImage.ToolTip>
                            <StackPanel>
                              <mui:BbCodeBlock Mode="WithoutBbCodes" Text="{Binding CarSkin.DisplayName}" Margin="4" />
                              <mui:BetterImage Filename="{Binding CarSkin.PreviewImage}" Width="256" Height="144" Margin="4" />
                            </StackPanel>
                          </mui:BetterImage.ToolTip>
                        </mui:BetterImage>

                        <mui:BbCodeBlock Mode="WithoutBbCodes" DockPanel.Dock="Bottom" Text="{Binding Car.DisplayName}" Style="{StaticResource Small}"
                            TextWrapping="NoWrap" TextTrimming="CharacterEllipsis" Placeholder="{Binding CarId}" />

                        <mui:BbCodeBlock x:Name="DriverName" Text="{Binding Name}" Mode="WithoutBbCodes" Placeholder="Empty slot"
                            TextWrapping="NoWrap" TextTrimming="CharacterEllipsis" DockPanel.Dock="Left" />
                        <ItemsControl ItemsSource="{Binding Tags}" Height="16" Margin="4 1 0 -1">
                          <ItemsControl.ItemTemplate>
                            <DataTemplate>
                              <mui:BbCodeBlock Text="{Binding DisplayName}"
                                  Foreground="{Binding Color, Converter={x:Static mui:ColorPicker.ColorToBrushConverter}}"
                                  Background="{DynamicResource ButtonBackground}" FontFamily="{StaticResource CondensedFont}" FontSize="10" Margin="0 0 4 0"
                                  Padding="2 2" />
                            </DataTemplate>
                          </ItemsControl.ItemTemplate>
                          <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                              <StackPanel Orientation="Horizontal" />
                            </ItemsPanelTemplate>
                          </ItemsControl.ItemsPanel>
                        </ItemsControl>
                      </DockPanel>

                      <DataTemplate.Triggers>
                        <DataTrigger Binding="{Binding IsConnected}" Value="False">
                          <Setter Property="TextBlock.TextDecorations" Value="Strikethrough" TargetName="DriverName" />
                          <Setter Property="ToolTip" Value="Disconnected" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsBookedForPlayer}" Value="True">
                          <Setter Property="TextBlock.TextDecorations" Value="None" TargetName="DriverName" />
                          <!-- <Setter Property="TextBlock.FontWeight" Value="Bold" TargetName="DriverName" /> -->
                          <Setter Property="TextBlock.Opacity" Value="0.5" TargetName="DriverName" />
                          <Setter Property="TextBlock.Text" TargetName="DriverName"
                              Value="{Binding Path=Name, StringFormat={x:Static t:ToolsStrings.Online_YouFormat}}" />
                          <Setter Property="ToolTip" Value="{x:Static t:ToolsStrings.Online_YouAreBookedOnThisServer}" />
                        </DataTrigger>
                        <MultiDataTrigger>
                          <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding IsConnected}" Value="True" />
                            <Condition Binding="{Binding IsBookedForPlayer}" Value="True" />
                          </MultiDataTrigger.Conditions>
                          <Setter Property="ToolTip" Value="{x:Static t:ToolsStrings.Online_YouAreOnThisServer}" />
                        </MultiDataTrigger>
                      </DataTemplate.Triggers>
                    </DataTemplate>
                  </ItemsControl.ItemTemplate>
                </ItemsControl>
              </DockPanel>
            </mui:Switch>
          </DockPanel>
        </ScrollViewer>

        <Border Background="{DynamicResource WindowBackground}" BorderThickness="1" BorderBrush="{DynamicResource WindowBorderActive}"
            TextBlock.Foreground="{DynamicResource WindowText}" HorizontalAlignment="Center" VerticalAlignment="Bottom"
            Visibility="{Binding AutoJoinActive, Converter={StaticResource BooleanToVisibilityConverter}}" Padding="20" MaxWidth="320" Margin="20">
          <DockPanel>
            <Button Command="{Binding StopAutoJoinCommand}" DockPanel.Dock="Bottom" HorizontalAlignment="Left" Margin="0 20 0 0"
                Content="{x:Static g:AppStrings.Drive_OnlineServer_Stop}" />
            <Path Data="{StaticResource RefreshIconData}" Width="12" Height="12" DockPanel.Dock="Left" Fill="{DynamicResource Go}" Stretch="Uniform"
                Margin="0 8 8 0" VerticalAlignment="Top" RenderTransformOrigin="0.5, 0.5">
              <Path.RenderTransform>
                <RotateTransform />
              </Path.RenderTransform>
              <Path.Triggers>
                <EventTrigger RoutedEvent="Ellipse.Loaded">
                  <BeginStoryboard>
                    <Storyboard RepeatBehavior="Forever" TargetProperty="(Path.RenderTransform).(RotateTransform.Angle)">
                      <DoubleAnimationUsingKeyFrames>
                        <DiscreteDoubleKeyFrame KeyTime="0:0:0.000" Value="0" />
                        <DiscreteDoubleKeyFrame KeyTime="0:0:0.500" Value="0" />
                        <EasingDoubleKeyFrame KeyTime="0:0:2.000" Value="180" EasingFunction="{StaticResource StandardEase}" />
                      </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                  </BeginStoryboard>
                </EventTrigger>
              </Path.Triggers>
            </Path>
            <mui:BooleanSwitch Value="{Binding AutoJoinAnyCar}">
              <mui:BooleanSwitch.False>
                <TextBlock TextWrapping="Wrap">
                  <TextBlock.Text>
                    Auto-join is active. The race will be started as soon as there is an available slot with the selected car. To cancel
                    auto-join, leave this page or press Stop.
                  </TextBlock.Text>
                </TextBlock>
              </mui:BooleanSwitch.False>
              <mui:BooleanSwitch.True>
                <TextBlock TextWrapping="Wrap">
                  <TextBlock.Text>
                    Auto-join is active. The race will be started as soon as there is an available slot. To cancel auto-join, leave this page or
                    press Stop.
                  </TextBlock.Text>
                </TextBlock>
              </mui:BooleanSwitch.True>
            </mui:BooleanSwitch>
          </DockPanel>
        </Border>
      </DockPanel>
    </mui:Switch>
  </DockPanel>
</UserControl>