<UserControl x:Class="AcManager.Pages.Drive.QuickDrive" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mui="http://firstfloorsoftware.com/ModernUI"
    xmlns:dr="clr-namespace:AcManager.Pages.Drive" xmlns:g="clr-namespace:AcManager" xmlns:t="http://acstuff.club/app/tools"
    xmlns:c="http://acstuff.club/app/controls" xmlns:uc="clr-namespace:AcManager.UserControls" xmlns:a="clr-namespace:AcTools;assembly=AcTools" mc:Ignorable="d"
    Loaded="OnLoaded" Unloaded="OnUnloaded" d:DataContext="{d:DesignInstance dr:QuickDrive+ViewModel}" mui:InputBindingBehavior.PropagateToWindow="True"
    x:Name="This">
  <UserControl.Resources>
    <ResourceDictionary>
      <ResourceDictionary.MergedDictionaries>
        <mui:SharedResourceDictionary Source="/AcManager.Controls;component/Assets/AcItemWrapperSpecific.xaml" />
        <mui:SharedResourceDictionary Source="/AcManager.Controls;component/Assets/IconData.xaml" />
      </ResourceDictionary.MergedDictionaries>

      <mui:BindingProxy x:Key="Model" Data="{Binding}" />

      <ContextMenu x:Key="RealConditionsContextMenu" x:Shared="False">
        <MenuItem Header="{x:Static g:AppStrings.Drive_LocalWeatherHeader}" IsChecked="{Binding RealConditionsLocalWeather, Mode=OneWay}" IsCheckable="True"
            ToolTip="{x:Static g:AppStrings.Drive_LocalWeather_Tooltip}" Command="{Binding SwitchLocalWeatherCommand}" />
        <MenuItem Header="{x:Static g:AppStrings.QuickDrive_SetWindManually}" IsChecked="{Binding RealConditionsManualWind}" IsCheckable="True" />
        <Separator />
        <MenuItem Header="{x:Static g:AppStrings.Drive_SetTimeManuallyHeader}" IsChecked="{Binding RealConditionsManualTime}" IsCheckable="True" />
        <MenuItem Header="{x:Static g:AppStrings.Drive_ConsiderTimezones}" IsChecked="{Binding RealConditionsTimezones}" IsCheckable="True"
            IsEnabled="{Binding RealConditionsManualTime, Converter={StaticResource InvertBooleanConverter}}" />
      </ContextMenu>

      <mui:HierarchicalComboBox x:Key="CarSpecificControlsComboBox" ItemsSource="{Binding Presets, Source={x:Static c:ControlsPresets.Instance}}"
          DataContext="{Binding SelectedCar}" SelectedItem="{Binding SelectedControlsPreset}"
          IsEnabled="{Binding PresetsReady, Source={x:Static c:ControlsPresets.Instance}}" FixedMode="False"
          PreviewProvider="{Binding Source={x:Static c:ControlsPresets.Instance}}" x:Shared="False">
        <mui:HierarchicalComboBox.SelectedContent>
          <DataTemplate>
            <TextBlock x:Name="TextBlock" TextTrimming="CharacterEllipsis" Text="{Binding DataContext.SelectedCar.CurrentControlsPresetName, ElementName=This}" />
            <DataTemplate.Triggers>
              <DataTrigger Binding="{Binding DataContext.SelectedCar.CurrentControlsPresetName, ElementName=This}" Value="{x:Null}">
                <Setter TargetName="TextBlock" Property="Text" Value="Default" />
                <Setter TargetName="TextBlock" Property="FontStyle" Value="Italic" />
              </DataTrigger>
            </DataTemplate.Triggers>
          </DataTemplate>
        </mui:HierarchicalComboBox.SelectedContent>
      </mui:HierarchicalComboBox>

      <DockPanel x:Key="CarSpecificFanatecPanel" x:Shared="False" DataContext="{Binding SelectedCar}">
        <CheckBox IsChecked="{Binding FanatecCustomSettings}" Margin="0 0 0 8" DockPanel.Dock="Top">
          <Label Content="{x:Static g:AppStrings.Drive_Quick_CarSpecificFanatecSettings}" />
        </CheckBox>
        <StackPanel IsEnabled="{Binding FanatecCustomSettings}">
          <CheckBox IsChecked="{Binding FanatecDisable}" Margin="0 0 0 8">
            <Label Content="{x:Static g:AppStrings.Drive_Quick_DisableLEDsAndDisplay}" />
          </CheckBox>
          <CheckBox IsChecked="{Binding FanatecOnlyShowGear}" Margin="0 0 0 0"
              IsEnabled="{Binding FanatecDisable, Converter={StaticResource InvertBooleanConverter}}">
            <Label Content="{x:Static g:AppStrings.Drive_Quick_ShowCurrentGearOnly}" />
          </CheckBox>
        </StackPanel>
      </DockPanel>


      <mui:Cell x:Key="SimpleVersion">
        <mui:SpacingUniformGrid HorizontalAlignment="Center" VerticalAlignment="Center" Rows="1" Columns="3" HorizontalSpacing="20">
          <mui:Cell Width="200" Height="120" Background="{DynamicResource CardBackground}" MouseLeftButtonUp="OnCarBlockClick" ClipToBounds="True">
            <TextBlock Style="{StaticResource Title}" Text="{x:Static g:AppStrings.QuickDrive_NoCarSelected}"
                Foreground="{DynamicResource CardHeaderTextDisabled}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0 0 0 20"
                Visibility="{Binding SelectedCar, Converter={StaticResource NullToVisibilityConverter}}" />
            <mui:BetterImage Filename="{Binding SelectedCar.SelectedSkin.PreviewImage}" DecodeWidth="320" Stretch="UniformToFill" />
            <mui:BbCodeBlock Mode="WithoutBbCodes" TextWrapping="NoWrap" Padding="4 4 12 4" HorizontalAlignment="Stretch" VerticalAlignment="Bottom"
                Text="{Binding SelectedCar.DisplayName}" Background="{DynamicResource DarkStripeBackground}" Foreground="{DynamicResource DarkStripeText}"
                TextTrimming="CharacterEllipsis" />
          </mui:Cell>
          <mui:Cell Width="200" Height="120" Background="{DynamicResource CardBackground}"  MouseLeftButtonUp="OnTrackBlockClick">
            <TextBlock Style="{StaticResource Title}" Text="{x:Static g:AppStrings.QuickDrive_NoTrackSelected}"
                Foreground="{DynamicResource CardHeaderTextDisabled}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0 0 0 20"
                Visibility="{Binding SelectedTrack, Converter={StaticResource NullToVisibilityConverter}}" />
            <mui:BetterImage Filename="{Binding SelectedTrack.PreviewImage}" DecodeWidth="{Binding Source={x:Static a:CommonAcConsts.TrackPreviewWidth}}"
                Stretch="UniformToFill" />
            <mui:BetterImage Filename="{Binding SelectedTrack.OutlineImage}" DecodeWidth="{Binding Source={x:Static a:CommonAcConsts.TrackOutlineWidth}}"
                ShowBroken="False" />
            <mui:BbCodeBlock Mode="WithoutBbCodes" TextWrapping="NoWrap" Padding="4 4 12 4" HorizontalAlignment="Stretch" VerticalAlignment="Bottom"
                Text="{Binding SelectedTrack.Name}" Background="{DynamicResource DarkStripeBackground}" Foreground="{DynamicResource DarkStripeText}"
                TextTrimming="CharacterEllipsis" />
          </mui:Cell>
          <Button Command="{Binding GoCommand}" Style="{StaticResource Go.Button}" HorizontalAlignment="Left">
            <Button.ToolTip>
              <mui:ReferenceSwitch Value="{Binding SelectedModeViewModel.TrackDoesNotFit}">
                <mui:ReferenceSwitch.Null>
                  <TextBlock Text="{x:Static g:AppStrings.Common_Go_RaceTooltip}" />
                </mui:ReferenceSwitch.Null>
                <mui:ReferenceSwitch.NonNull>
                  <TextBlock Text="{Binding SelectedModeViewModel.TrackDoesNotFit.Item1}" />
                </mui:ReferenceSwitch.NonNull>
              </mui:ReferenceSwitch>
            </Button.ToolTip>
            <DockPanel>
              <Path Data="{StaticResource AlertIconData}" Width="12" Height="12" DockPanel.Dock="Left" Fill="{DynamicResource Error}" Stretch="Uniform"
                  Visibility="{Binding SelectedModeViewModel.CarOrTrackDoesNotFit, Converter={StaticResource BooleanToVisibilityConverter}}" Margin="2 2 4 0"
                  VerticalAlignment="Center" />
              <TextBlock Text="{x:Static g:AppStrings.Common_Go}" />
            </DockPanel>
          </Button>
        </mui:SpacingUniformGrid>
      </mui:Cell>
    </ResourceDictionary>
  </UserControl.Resources>

  <Grid Style="{StaticResource ContentRootWithPadding}" x:Name="MainGrid">
    <Grid.RowDefinitions>
      <RowDefinition Height="Auto" />
      <RowDefinition Height="20" />
      <RowDefinition Height="*" />
      <RowDefinition Height="Auto" />
    </Grid.RowDefinitions>

    <Grid Grid.Row="0" x:Name="TopRow">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="Auto" />
        <ColumnDefinition Width="Auto" />
        <ColumnDefinition />
      </Grid.ColumnDefinitions>

      <DockPanel Grid.Column="0" x:Name="CarCell" Width="160" Margin="0 0 20 0">
        <DockPanel x:Name="CarCellExtra" Margin="0 8 0 0" DockPanel.Dock="Bottom"
            IsEnabled="{Binding SelectedCar, Converter={StaticResource NullToBooleanConverter}, ConverterParameter=inverse}">
          <mui:BetterComboBox Width="44" Height="24" IsEditable="False" SelectedItem="{Binding SelectedCar}" ItemsSource="{Binding TunableVersions}"
              Visibility="{Binding HasChildren, Converter={StaticResource BooleanToVisibilityConverter}}" DockPanel.Dock="Left" Margin="0 0 8 0">
            <ComboBox.ItemTemplate>
              <DataTemplate>
                <DockPanel Height="18">
                  <mui:BetterImage x:Name="UpgradeIconImage" Margin="-8" Width="34" Height="34" ClearOnChange="True" Filename="/Assets/Img/UpgradeStd.png"
                      Effect="{DynamicResource CarIconEffect}" DecodeWidth="78">
                    <mui:BetterImage.OpacityMask>
                      <VisualBrush Stretch="None">
                        <VisualBrush.Visual>
                          <Ellipse Width="20" Height="20" Fill="Black" Margin="7" />
                        </VisualBrush.Visual>
                      </VisualBrush>
                    </mui:BetterImage.OpacityMask>
                  </mui:BetterImage>
                  <TextBlock x:Name="PART_Name" Margin="4 0 0 0" Text="{Binding DisplayName}" VerticalAlignment="Top" />
                </DockPanel>
                <DataTemplate.Triggers>
                  <DataTrigger Binding="{Binding IsChild}" Value="True">
                    <Setter TargetName="UpgradeIconImage" Property="Filename" Value="{Binding UpgradeIcon}" />
                  </DataTrigger>
                  <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ComboBoxItem}, FallbackValue={x:Null}}" Value="{x:Null}">
                    <Setter Property="Visibility" Value="Collapsed" TargetName="PART_Name" />
                  </DataTrigger>
                </DataTemplate.Triggers>
              </DataTemplate>
            </ComboBox.ItemTemplate>
          </mui:BetterComboBox>

          <mui:BetterComboBox IsEditable="False" SelectedItem="{Binding SelectedCar.SelectedSkin}" ItemsSource="{Binding SelectedCar.EnabledOnlySkins}">
            <ComboBox.ItemTemplate>
              <DataTemplate>
                <DockPanel Height="18">
                  <mui:BetterImage Margin="0 0 4 0" ClearOnChange="True" Filename="{Binding LiveryImage}" Width="18" Height="18" DecodeWidth="36" />
                  <TextBlock Text="{Binding DisplayName}" VerticalAlignment="Top" />
                </DockPanel>
              </DataTemplate>
            </ComboBox.ItemTemplate>
          </mui:BetterComboBox>
        </DockPanel>

        <mui:Cell x:Name="CarCellBase" Height="120" Background="{DynamicResource CardBackground}" mui:Draggable.Data="{Binding SelectedCar}" AllowDrop="True"
            Drop="OnCarBlockDrop" MouseLeftButtonUp="OnCarBlockClick" ClipToBounds="True" c:ToolTips.Car="{Binding SelectedCar}">
          <TextBlock Style="{StaticResource Title}" Text="{x:Static g:AppStrings.QuickDrive_NoCarSelected}"
              Foreground="{DynamicResource CardHeaderTextDisabled}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0 0 0 20"
              Visibility="{Binding SelectedCar, Converter={StaticResource NullToVisibilityConverter}}" />
          <mui:BetterImage Filename="{Binding SelectedCar.SelectedSkin.PreviewImage}" DecodeWidth="320" Stretch="UniformToFill" />
          <mui:BbCodeBlock Mode="WithoutBbCodes" TextWrapping="NoWrap" Padding="4 4 12 4" HorizontalAlignment="Stretch" VerticalAlignment="Bottom"
              Text="{Binding SelectedCar.DisplayName}" Background="{DynamicResource DarkStripeBackground}" Foreground="{DynamicResource DarkStripeText}"
              TextTrimming="CharacterEllipsis" />

          <Border Opacity="0" Background="{DynamicResource OverlayBackground}" Cursor="Hand"
              Visibility="{Binding QuickDriveFastAccessButtons, Source={x:Static t:SettingsHolder.Interface}, Converter={StaticResource BooleanToVisibilityConverter}}">
            <mui:Cell Effect="{DynamicResource OverlayEffect}">
              <mui:ModernButton Foreground="{DynamicResource OverlayForeground}" BorderBrush="{DynamicResource OverlayForeground}" EllipseStrokeThickness="2"
                  IconData="{StaticResource GarageIconData}" IconWidth="32" IconHeight="32" Margin="0 0 50 0" HorizontalAlignment="Center"
                  VerticalAlignment="Center" EllipseDiameter="64" ToolTip="{x:Static g:AppStrings.QuickDrive_ChangeCar_Tooltip}" Click="OnCarBlockClick" />
              <mui:ModernButton Foreground="{DynamicResource OverlayForeground}" BorderBrush="{DynamicResource OverlayForeground}" EllipseStrokeThickness="2"
                  IconData="{StaticResource CarShowroomIconData}" IconWidth="22" IconHeight="22" Margin="80 0 20 72" HorizontalAlignment="Center"
                  VerticalAlignment="Center" EllipseDiameter="32" ToolTip="{x:Static g:AppStrings.QuickDrive_OpenInShowroom_Tooltip}"
                  Click="OnShowroomButtonClick" PreviewMouseRightButtonDown="OnShowroomContextMenu" />
              <mui:ModernButton Foreground="{DynamicResource OverlayForeground}" BorderBrush="{DynamicResource OverlayForeground}" EllipseStrokeThickness="2"
                  IconData="{StaticResource CarSetupIconData}" IconHeight="20" IconWidth="20" Margin="88 0 0 0" HorizontalAlignment="Center"
                  VerticalAlignment="Center" EllipseDiameter="32" ToolTip="{x:Static g:AppStrings.QuickDrive_ManageSetups_Tooltip}"
                  Command="{Binding ManageCarSetupsCommand}" />
              <mui:ModernButton Foreground="{DynamicResource OverlayForeground}" BorderBrush="{DynamicResource OverlayForeground}" EllipseStrokeThickness="2"
                  IconData="{StaticResource ToolsIconData}" IconHeight="14" IconWidth="14" Margin="80 72 20 0" HorizontalAlignment="Center"
                  VerticalAlignment="Center" EllipseDiameter="32" ToolTip="{x:Static g:AppStrings.QuickDrive_ManageCar_Tooltip}"
                  Command="{Binding ManageCarCommand}" />
            </mui:Cell>
            <Border.Triggers>
              <EventTrigger RoutedEvent="Grid.MouseEnter">
                <EventTrigger.Actions>
                  <BeginStoryboard>
                    <Storyboard>
                      <DoubleAnimation Duration="0:0:0.2" To="1" Storyboard.TargetProperty="(Grid.Opacity)" FillBehavior="HoldEnd"
                          EasingFunction="{StaticResource EaseInOut}" />
                    </Storyboard>
                  </BeginStoryboard>
                </EventTrigger.Actions>
              </EventTrigger>
              <EventTrigger RoutedEvent="Grid.MouseLeave">
                <EventTrigger.Actions>
                  <BeginStoryboard>
                    <Storyboard BeginTime="0:0:0.15">
                      <DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="(Grid.Opacity)" FillBehavior="HoldEnd"
                          EasingFunction="{StaticResource EaseInOut}" />
                    </Storyboard>
                  </BeginStoryboard>
                </EventTrigger.Actions>
              </EventTrigger>
            </Border.Triggers>
          </Border>

          <Button HorizontalAlignment="Right" VerticalAlignment="Top" Margin="4" Padding="4" Visibility="Collapsed" c:CupUi.Object="{Binding SelectedCar}">
            <Path Data="{StaticResource UpdateIconData}" Width="10" Height="10" VerticalAlignment="Center" HorizontalAlignment="Center"
                Fill="{DynamicResource GoButtonText}" StrokeThickness="0" Stretch="Uniform" />
          </Button>
          <mui:ContextMenuButton Click="OnCarContextMenu" VerticalAlignment="Bottom" HorizontalAlignment="Right" Padding="6 8" />
        </mui:Cell>

      </DockPanel>

      <DockPanel x:Name="TrackCell" Grid.Column="1" Width="160" Margin="0 0 6 0">
        <mui:ModernTabSplitter Foreground="Transparent" Width="8" DragDelta="OnCarTrackSeparatorDrag" Panel.ZIndex="-1" DockPanel.Dock="Right" Margin="6 0 0 0" />

        <DockPanel x:Name="TrackCellExtra" Margin="0 8 0 0" DockPanel.Dock="Bottom"
            IsEnabled="{Binding SelectedTrack, Converter={StaticResource NullToBooleanConverter}, ConverterParameter=inverse}">
          <mui:ReferenceSwitch Value="{Binding SelectedTrack.MainTrackObject.MultiLayouts}">
            <mui:BetterComboBox Width="44" Height="24" IsEditable="False" HoldSelectedIfEmpty="True" SelectedItem="{Binding SelectedTrack}"
                ItemsSource="{Binding SelectedTrack.MainTrackObject.MultiLayouts}" DockPanel.Dock="Left" Margin="0 0 8 0">
              <mui:BetterComboBox.ItemTemplate>
                <DataTemplate>
                  <DockPanel Height="18">
                    <mui:BetterImage ClearOnChange="True" Filename="{Binding OutlineImage}" Width="18" Height="18"
                        Effect="{DynamicResource TrackOutlineAloneEffect}" CropTransparentAreas="True" DecodeWidth="48" />
                    <TextBlock Margin="4 0 0 0" x:Name="PART_Name" Text="{Binding Name}" VerticalAlignment="Top" />
                  </DockPanel>
                  <DataTemplate.Triggers>
                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ComboBoxItem}, FallbackValue={x:Null}}" Value="{x:Null}">
                      <Setter Property="Visibility" Value="Collapsed" TargetName="PART_Name" />
                    </DataTrigger>
                  </DataTemplate.Triggers>
                </DataTemplate>
              </mui:BetterComboBox.ItemTemplate>
            </mui:BetterComboBox>
          </mui:ReferenceSwitch>

          <mui:BetterComboBox IsEditable="False" ItemsSource="{Binding SelectedTrack.MainTrackObject.EnabledOnlySkins}" SelectedItem="{Binding AlwaysNull}"
              IsEnabled="{Binding SelectedTrack.MainTrackObject.EnabledOnlySkins.Count, Converter={StaticResource MoreConverter}}">
            <mui:BetterComboBox.Template>
              <ControlTemplate TargetType="{x:Type mui:BetterComboBox}">
                <mui:Cell x:Name="MainGrid" SnapsToDevicePixels="True">
                  <Popup x:Name="PART_Popup" AllowsTransparency="True" Placement="Bottom" Margin="1"
                      IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                      PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                    <mui:Cell Margin="0" MinWidth="{Binding ElementName=MainGrid,Path=ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                      <Border x:Name="DropDownBorder" Background="{DynamicResource PopupBackground}" BorderBrush="{DynamicResource WindowBorderActive}"
                          BorderThickness="1" TextBlock.Foreground="{DynamicResource WindowText}">
                        <ScrollViewer x:Name="DropDownScrollViewer">
                          <ItemsPresenter x:Name="ItemsPresenter" RenderOptions.ClearTypeHint="Enabled" KeyboardNavigation.DirectionalNavigation="Contained"
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </ScrollViewer>
                      </Border>
                    </mui:Cell>
                  </Popup>
                  <ToggleButton Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" Padding="0"
                      BorderThickness="{TemplateBinding BorderThickness}"
                      IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" />
                  <Path x:Name="Arrow" Margin="3 1 8 0" Fill="{TemplateBinding Foreground}" Data="{DynamicResource DownArrowGeometry}"
                      HorizontalAlignment="Right" VerticalAlignment="Center" IsHitTestVisible="False" />
                  <mui:LimitedViewbox MinimumScale="0.84" MaximumScale="1" Margin="7 3 20 5" IsHitTestVisible="False" VerticalAlignment="Bottom"
                      HorizontalAlignment="Left" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                    <TextBlock Text="{Binding DataContext.SelectedTrack.MainTrackObject.DisplayActiveSkins, ElementName=This}" TextTrimming="CharacterEllipsis"
                        VerticalAlignment="Bottom" Margin="0 0 0 -1" TextAlignment="Left" />
                  </mui:LimitedViewbox>
                </mui:Cell>
                <ControlTemplate.Triggers>
                  <Trigger Property="HasItems" Value="False">
                    <Setter TargetName="DropDownBorder" Property="Height" Value="95" />
                  </Trigger>
                  <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Foreground" Value="{DynamicResource InputTextDisabled}" />
                  </Trigger>
                  <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="{DynamicResource InputTextHover}" />
                    <Setter Property="Background" Value="{DynamicResource InputBackgroundHover}" />
                    <Setter Property="BorderBrush" Value="{DynamicResource InputBorderHover}" />
                  </Trigger>
                  <Trigger Property="IsFocused" Value="True">
                    <Setter Property="BorderBrush" Value="{DynamicResource FocusBorder}" />
                  </Trigger>
                </ControlTemplate.Triggers>
              </ControlTemplate>
            </mui:BetterComboBox.Template>
            <ComboBox.ItemTemplate>
              <DataTemplate>
                <CheckBox x:Name="PART_Content" IsChecked="{Binding IsActive}" Margin="0 -1 0 1" Height="18" HorizontalAlignment="Stretch">
                  <CheckBox.Template>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                      <Border Background="Transparent" Margin="-10 -2" Padding="10 2" HorizontalAlignment="Stretch">
                        <DockPanel x:Name="LayoutRoot">
                          <Border x:Name="CheckBorder" Width="16" Height="16" Margin="0 1 4 0" Background="{TemplateBinding Background}"
                              BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" DockPanel.Dock="Left">
                            <Path x:Name="CheckMark" Width="10" Height="10" Margin="2" Visibility="Collapsed" Stretch="Fill"
                                Fill="{TemplateBinding Foreground}" Data="F1 M 15,21L 22,28L 32.9999,14.0001L 35.9999,17.0001L 22,34L 12.0001,24L 15,21 Z " />
                          </Border>
                          <ContentPresenter VerticalAlignment="Center" Margin="{TemplateBinding Padding}" />
                        </DockPanel>
                      </Border>
                      <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                          <Setter Property="Foreground" Value="{DynamicResource ButtonTextDisabled}" />
                        </Trigger>
                        <DataTrigger Binding="{Binding IsHighlighted, RelativeSource={RelativeSource AncestorType=ComboBoxItem}, FallbackValue=False}"
                            Value="True">
                          <Setter Property="TextBlock.Foreground" Value="{DynamicResource ItemTextSelected}" />
                          <Setter TargetName="CheckBorder" Property="Background" Value="{DynamicResource ButtonBackgroundHover}" />
                          <Setter TargetName="CheckBorder" Property="BorderBrush" Value="{DynamicResource ButtonBorderHover}" />
                          <Setter TargetName="CheckMark" Property="Fill" Value="{DynamicResource ButtonTextHover}" />
                        </DataTrigger>
                        <Trigger Property="IsChecked" Value="True">
                          <Setter TargetName="CheckMark" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                          <Setter TargetName="CheckBorder" Property="Background" Value="{DynamicResource ButtonBackgroundPressed}" />
                          <Setter TargetName="CheckBorder" Property="BorderBrush" Value="{DynamicResource DataGridForeground}" />
                          <Setter TargetName="CheckMark" Property="Fill" Value="{DynamicResource DataGridForeground}" />
                        </Trigger>
                      </ControlTemplate.Triggers>
                    </ControlTemplate>
                  </CheckBox.Template>
                  <DockPanel Margin="0 1 0 -1">
                    <mui:BetterImage Margin="4 0 4 0" ClearOnChange="True" Filename="{Binding PreviewImage}" Width="24" Height="18" Stretch="UniformToFill" />
                    <TextBlock Text="{Binding DisplayName}" VerticalAlignment="Top" />
                  </DockPanel>
                </CheckBox>
                <DataTemplate.Triggers>
                  <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ComboBoxItem}, FallbackValue={x:Null}}" Value="{x:Null}">
                    <Setter Property="Visibility" Value="Collapsed" TargetName="PART_Content" />
                  </DataTrigger>
                </DataTemplate.Triggers>
              </DataTemplate>
            </ComboBox.ItemTemplate>
          </mui:BetterComboBox>
        </DockPanel>

        <mui:Cell x:Name="TrackCellBase" Height="120" Background="{DynamicResource CardBackground}" mui:Draggable.Data="{Binding SelectedTrack}"
            AllowDrop="True" Drop="OnTrackBlockDrop" MouseLeftButtonUp="OnTrackBlockClick">
          <TextBlock Style="{StaticResource Title}" Text="{x:Static g:AppStrings.QuickDrive_NoTrackSelected}"
              Foreground="{DynamicResource CardHeaderTextDisabled}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0 0 0 20"
              Visibility="{Binding SelectedTrack, Converter={StaticResource NullToVisibilityConverter}}" />
          <mui:BetterImage Filename="{Binding SelectedTrack.PreviewImage}" DecodeWidth="{Binding Source={x:Static a:CommonAcConsts.TrackPreviewWidth}}"
              Stretch="UniformToFill" />
          <mui:BetterImage Filename="{Binding SelectedTrack.OutlineImage}" DecodeWidth="{Binding Source={x:Static a:CommonAcConsts.TrackOutlineWidth}}"
              ShowBroken="False" />
          <mui:BbCodeBlock Mode="WithoutBbCodes" TextWrapping="NoWrap" Padding="4 4 12 4" HorizontalAlignment="Stretch" VerticalAlignment="Bottom"
              Text="{Binding SelectedTrack.Name}" Background="{DynamicResource DarkStripeBackground}" Foreground="{DynamicResource DarkStripeText}"
              TextTrimming="CharacterEllipsis" />

          <Border Opacity="0" Background="{DynamicResource OverlayBackground}" Cursor="Hand"
              Visibility="{Binding QuickDriveFastAccessButtons, Source={x:Static t:SettingsHolder.Interface}, Converter={StaticResource BooleanToVisibilityConverter}}">
            <mui:Cell Effect="{DynamicResource OverlayEffect}">
              <mui:ModernButton Foreground="{DynamicResource OverlayForeground}" BorderBrush="{DynamicResource OverlayForeground}" EllipseStrokeThickness="2"
                  IconData="{StaticResource ListSelectIconData}" IconWidth="32" IconHeight="32" Margin="0 0 50 0" HorizontalAlignment="Center"
                  VerticalAlignment="Center" EllipseDiameter="64" ToolTip="{x:Static g:AppStrings.QuickDrive_ChangeTrack_Tooltip}" Click="OnTrackBlockClick" />
              <mui:ModernButton Foreground="{DynamicResource OverlayForeground}" BorderBrush="{DynamicResource OverlayForeground}" EllipseStrokeThickness="2"
                  IconData="{StaticResource ToolsIconData}" IconHeight="14" IconWidth="14" Margin="88 0 0 0" HorizontalAlignment="Center"
                  VerticalAlignment="Center" EllipseDiameter="32" ToolTip="{x:Static g:AppStrings.QuickDrive_ManageTrack_Tooltip}"
                  Command="{Binding ManageTrackCommand}" />
            </mui:Cell>
            <Border.Triggers>
              <EventTrigger RoutedEvent="Grid.MouseEnter">
                <EventTrigger.Actions>
                  <BeginStoryboard>
                    <Storyboard>
                      <DoubleAnimation Duration="0:0:0.2" To="1" Storyboard.TargetProperty="(Grid.Opacity)" FillBehavior="HoldEnd"
                          EasingFunction="{StaticResource EaseInOut}" />
                    </Storyboard>
                  </BeginStoryboard>
                </EventTrigger.Actions>
              </EventTrigger>
              <EventTrigger RoutedEvent="Grid.MouseLeave">
                <EventTrigger.Actions>
                  <BeginStoryboard>
                    <Storyboard BeginTime="0:0:0.15">
                      <DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="(Grid.Opacity)" FillBehavior="HoldEnd"
                          EasingFunction="{StaticResource EaseInOut}" />
                    </Storyboard>
                  </BeginStoryboard>
                </EventTrigger.Actions>
              </EventTrigger>
            </Border.Triggers>
          </Border>

          <Button HorizontalAlignment="Right" VerticalAlignment="Top" Margin="4" Padding="4" Visibility="Collapsed"
              c:CupUi.Object="{Binding SelectedTrack.MainTrackObject}">
            <Path Data="{StaticResource UpdateIconData}" Width="10" Height="10" VerticalAlignment="Center" HorizontalAlignment="Center"
                Fill="{DynamicResource GoButtonText}" StrokeThickness="0" Stretch="Uniform" />
          </Button>
          <mui:ContextMenuButton Click="OnTrackContextMenu" VerticalAlignment="Bottom" HorizontalAlignment="Right" Padding="6 8" />
        </mui:Cell>

      </DockPanel>

      <Grid Grid.Column="2">
        <Grid.ColumnDefinitions>
          <ColumnDefinition MinWidth="124" />
          <ColumnDefinition MinWidth="124" />
          <ColumnDefinition MinWidth="124" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
          <RowDefinition />
          <RowDefinition />
        </Grid.RowDefinitions>

        <StackPanel Margin="0 0 8 16" Grid.Row="0" Grid.Column="0" IsEnabled="{Binding ManualTime}" VerticalAlignment="Center">
          <DockPanel>
            <mui:ContextMenuButton DockPanel.Dock="Right" VerticalAlignment="Center">
              <c:ModernPopup Padding="16 12 16 16">
                <mui:SpacingStackPanel Spacing="8" DataContext="{Binding Data, Source={StaticResource Model}}"
                    d:DataContext="{d:DesignInstance dr:QuickDrive+ViewModel}" Width="160">
                  <CheckBox IsChecked="{Binding RandomTime}">
                    <Label Content="{x:Static g:AppStrings.QuickDrive_RandomTime}" />
                  </CheckBox>
                  <mui:ValueLabel Value="{Binding TimeMultiplier}" Postfix="×" Content="{x:Static g:AppStrings.Drive_TimeMultiplerLabel}" Margin="-8 0 0 0" />
                  <Slider Minimum="0" Maximum="1" TickFrequency="0.2" TickPlacement="None" IsSnapToTickEnabled="False" Margin="-5 0 0 0">
                    <Slider.Value>
                      <Binding Path="TimeMultiplier">
                        <Binding.Converter>
                          <mui:LogarithmicScale Minimum="0" Middle="10" Maximum="60" />
                        </Binding.Converter>
                      </Binding>
                    </Slider.Value>
                  </Slider>
                  <mui:SpacingStackPanel Spacing="8" Visibility="{Binding CustomDateSupported, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <CheckBox IsChecked="{Binding UseSpecificDate}">
                      <Label Content="{x:Static g:AppStrings.QuickDrive_SpecificDate}" />
                    </CheckBox>
                    <DatePicker IsEnabled="{Binding UseSpecificDate}" SelectedDate="{Binding SpecificDateValue}" c:AcDateLimiter.After1970Only="True" />
                  </mui:SpacingStackPanel>
                </mui:SpacingStackPanel>
              </c:ModernPopup>
            </mui:ContextMenuButton>
            <mui:Cell Margin="0 0 0 4">
              <mui:BooleanSwitch Value="{Binding RandomTime}">
                <mui:BooleanSwitch.True>
                  <TextBlock Background="Transparent" Style="{StaticResource Label}" Padding="8 0 0 0">
                    <TextBlock.Text>
                      <MultiBinding StringFormat="{x:Static mui:ColonConverter.FormatBoth}">
                        <Binding Source="{x:Static g:AppStrings.Drive_Time}" />
                        <Binding Source="{x:Static g:AppStrings.Drive_Time_Random}" />
                      </MultiBinding>
                    </TextBlock.Text>
                  </TextBlock>
                </mui:BooleanSwitch.True>
                <mui:BooleanSwitch.False>
                  <mui:ValueLabel Value="{Binding DisplayTime}" mui:BetterTextBox.Mode="Time" Margin="0" Content="{x:Static g:AppStrings.Drive_Time}" />
                </mui:BooleanSwitch.False>
              </mui:BooleanSwitch>

              <Border Width="16" Height="16" Margin="0 0 0 -4" HorizontalAlignment="Right" Background="Transparent"
                  Visibility="{Binding IsTimeOutOfWeatherRange, Converter={StaticResource BooleanToVisibilityConverter}}"
                  ToolTip="{x:Static g:AppStrings.QuickDrive_TimeIsOutOfWeatherRange_Tooltip}">
                <Path Data="{StaticResource AlertIconData}" Fill="{DynamicResource Error}" Stretch="Uniform" Width="16" Height="16" />
              </Border>

              <Border Width="16" Height="16" Margin="0 0 0 -4" HorizontalAlignment="Right" Background="Transparent"
                  Visibility="{Binding IsTimeClamped, Converter={StaticResource BooleanToVisibilityConverter}}"
                  ToolTip="{x:Static g:AppStrings.Drive_Time_Warning}">
                <Path Data="{StaticResource AlertIconData}" Fill="{DynamicResource Error}" Stretch="Uniform" Width="16" Height="16" />
              </Border>
            </mui:Cell>
          </DockPanel>
          <Slider Value="{Binding TimeSliderMapper.MappedValue}" Margin="0 0 0 4" TickFrequency="3600" TickPlacement="BottomRight" IsSnapToTickEnabled="False"
              Minimum="0" Maximum="{Binding TimeSliderMapper.Size}" SmallChange="900" LargeChange="1800"
              IsEnabled="{Binding RandomTime, Converter={StaticResource InvertBooleanConverter}}" />
        </StackPanel>

        <DockPanel Grid.Row="1" Grid.Column="0" Margin="8 0 0 0" Background="Transparent" VerticalAlignment="Center">
          <mui:ContextMenuButton DockPanel.Dock="Right" Padding="8" Click="OnConditionsContextMenu" />
          <StackPanel>
            <CheckBox IsChecked="{Binding RealConditions}" ToolTip="{Binding RealWeather.FullDescription}">
              <Label Content="{x:Static g:AppStrings.Drive_RealConditions}" />
            </CheckBox>
            <CheckBox IsChecked="{Binding IdealConditions}" Margin="0 14 0 0">
              <Label Content="{x:Static g:AppStrings.QuickDrive_IdealConditions}" />
            </CheckBox>
          </StackPanel>
        </DockPanel>

        <StackPanel Margin="0 0 8 16" Grid.Row="0" Grid.Column="1" IsEnabled="{Binding ManualConditions}" VerticalAlignment="Center">
          <DockPanel Margin="0 0 0 4">
            <Border DockPanel.Dock="Right" Width="16" Height="16" Margin="0 0 0 -4" HorizontalAlignment="Right" Background="Transparent"
                Visibility="{Binding IsWeatherNotSupported, Converter={StaticResource BooleanToVisibilityConverter}}">
              <Border.ToolTip>
                <mui:ReferenceSwitch Value="{Binding RealWeather}">
                  <mui:ReferenceSwitch.Null>
                    <TextBlock Text="{x:Static g:AppStrings.Drive_Weather_CannotLoad}" />
                  </mui:ReferenceSwitch.Null>
                  <mui:ReferenceSwitch.NonNull>
                    <TextBlock Text="{Binding RealWeather.Description, StringFormat={x:Static g:AppStrings.Drive_Weather_Warning}, FallbackValue=?}" />
                  </mui:ReferenceSwitch.NonNull>
                </mui:ReferenceSwitch>
              </Border.ToolTip>
              <Path Data="{StaticResource AlertIconData}" Fill="{DynamicResource Error}" Stretch="Uniform" Width="16" Height="16" />
            </Border>
            <TextBlock Text="{x:Static g:AppStrings.Drive_WeatherLabel}" Style="{StaticResource Label.Padding}" />
          </DockPanel>

          <c:WeatherComboBox SelectedItem="{Binding SelectedWeather}" AllowRandomWeather="True" AllowWeatherByType="True"
              c:ToolTips.Weather="{Binding SelectedWeatherObject}" UseWeatherFX="True" />
        </StackPanel>

        <StackPanel Margin="0 0 8 0" Grid.Row="1" Grid.Column="1" VerticalAlignment="Center">
          <StackPanel.IsEnabled>
            <MultiBinding Converter="{StaticResource AndConverter}">
              <Binding Path="ManualConditions" />
              <Binding Path="SelectedWeatherWrapped.ControllerRef.FollowsSelectedTemperature" FallbackValue="True" />
            </MultiBinding>
          </StackPanel.IsEnabled>
          <DockPanel>
            <mui:ContextMenuButton DockPanel.Dock="Right" VerticalAlignment="Center">
              <c:ModernPopup Padding="16 12 16 16">
                <mui:SpacingStackPanel Spacing="8" DataContext="{Binding Data, Source={StaticResource Model}}"
                    d:DataContext="{d:DesignInstance dr:QuickDrive+ViewModel}" Width="240">
                  <CheckBox IsChecked="{Binding RandomTemperature}">
                    <Label Content="{x:Static g:AppStrings.QuickDrive_RandomTemperature}" />
                  </CheckBox>
                  <CheckBox IsChecked="{Binding CustomRoadTemperature}">
                    <Label Content="{x:Static g:AppStrings.QuickDrive_CustomRoadTemperature}" />
                  </CheckBox>
                  <c:TemperatureValueLabel IsEnabled="{Binding CustomRoadTemperature}" Value="{Binding CustomRoadTemperatureValue, StringFormat='\{0:F1\}'}"
                      Background="Transparent" Content="{x:Static g:AppStrings.QuickDrive_RoadTemperature}" Margin="-8 0 0 0">
                    <mui:ValueLabel.ToolTip>
                      <c:TemperatureBlock Prefix="{x:Static g:AppStrings.Common_RoadTemperature}" Rounding="0.1" Text="{Binding RoadTemperature}" />
                    </mui:ValueLabel.ToolTip>
                  </c:TemperatureValueLabel>
                  <Slider IsEnabled="{Binding CustomRoadTemperature}" Minimum="{x:Static a:CommonAcConsts.TemperatureMinimum}"
                      Maximum="{x:Static a:CommonAcConsts.TemperatureMaximum}" Value="{Binding CustomRoadTemperatureValue}" TickFrequency="6"
                      IsSnapToTickEnabled="False" TickPlacement="BottomRight" Margin="-5 0 0 0" SmallChange="5" LargeChange="5" />
                  <c:TemperatureBlock Text="{Binding RecommendedRoadTemperature}" Prefix="Recommended: " Style="{StaticResource Small}" />
                </mui:SpacingStackPanel>
              </c:ModernPopup>
            </mui:ContextMenuButton>

            <mui:BooleanSwitch Value="{Binding RandomTemperature}">
              <mui:BooleanSwitch.True>
                <TextBlock Background="Transparent" Style="{StaticResource Label}" Margin="0 0 0 4" Padding="8 0 0 0">
                  <TextBlock.Text>
                    <MultiBinding StringFormat="{x:Static mui:ColonConverter.FormatBoth}">
                      <Binding Source="{x:Static g:AppStrings.Drive_Temperature}" />
                      <Binding Source="{x:Static g:AppStrings.Drive_Temperature_Random}" />
                    </MultiBinding>
                  </TextBlock.Text>
                  <TextBlock.ToolTip>
                    <mui:BooleanSwitch Value="{Binding CustomRoadTemperature}">
                      <mui:BooleanSwitch.True>
                        <c:TemperatureBlock Prefix="{x:Static g:AppStrings.Common_RoadTemperature}" Rounding="0.1" Text="{Binding RoadTemperature}" />
                      </mui:BooleanSwitch.True>
                      <mui:BooleanSwitch.False>
                        <TextBlock>
                          <TextBlock.Text>
                            <MultiBinding StringFormat="{}{0}{1}">
                              <Binding Source="{x:Static g:AppStrings.Common_RoadTemperature}" />
                              <Binding Source="{x:Static g:AppStrings.Drive_Temperature_Random}" />
                            </MultiBinding>
                          </TextBlock.Text>
                        </TextBlock>
                      </mui:BooleanSwitch.False>
                    </mui:BooleanSwitch>
                  </TextBlock.ToolTip>
                </TextBlock>
              </mui:BooleanSwitch.True>
              <mui:BooleanSwitch.False>
                <c:TemperatureValueLabel Value="{Binding Temperature, StringFormat='\{0:F1\}'}" Background="Transparent"
                    Content="{x:Static g:AppStrings.Drive_Temperature}">
                  <mui:ValueLabel.ToolTip>
                    <c:TemperatureBlock Prefix="{x:Static g:AppStrings.Common_RoadTemperature}" Rounding="0.1" Text="{Binding RoadTemperature}" />
                  </mui:ValueLabel.ToolTip>
                </c:TemperatureValueLabel>
              </mui:BooleanSwitch.False>
            </mui:BooleanSwitch>
          </DockPanel>
          <mui:Cell Margin="0 0 0 4" Background="Transparent">
            <mui:Cell.ToolTip>
              <ToolTip Visibility="{Binding RealConditions, Converter={StaticResource BooleanToVisibilityConverter}}">
                <Grid Margin="4">
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="Auto" />
                  </Grid.ColumnDefinitions>
                  <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                  </Grid.RowDefinitions>

                  <TextBlock Style="{StaticResource Small}" Text="{x:Static g:AppStrings.Drive_ActualTemperature}" Margin="0 0 0 12" />
                  <TextBlock Grid.Row="1" Grid.RowSpan="2" Grid.Column="0" FontStyle="Italic" VerticalAlignment="Center" HorizontalAlignment="Center"
                      Visibility="{Binding RealWeather, Converter={StaticResource NullToVisibilityConverter}}"
                      Text="{x:Static g:AppStrings.Drive_LoadingFailed}" />
                  <TextBlock Grid.Row="1" Grid.Column="0" Style="{StaticResource Heading2}"
                      Text="{Binding RealWeather.Description, Converter={StaticResource ToTitleConverter}, TargetNullValue='?'}" />
                  <TextBlock Grid.Row="2" Grid.Column="0" Style="{StaticResource Heading1}"
                      Text="{Binding RealWeather.Temperature, StringFormat={x:Static c:ControlsStrings.Common_CelsiusFormat}, TargetNullValue='?'}" Margin="8" />
                  <mui:BetterImage Grid.Column="1" Grid.RowSpan="2" Grid.Row="1" Filename="{Binding RealWeather.Icon}" Width="36" Height="36" Stretch="Uniform"
                      Margin="8 0 0 0" HorizontalAlignment="Center" VerticalAlignment="Center" RenderOptions.BitmapScalingMode="HighQuality" />
                </Grid>
              </ToolTip>
            </mui:Cell.ToolTip>
            <Slider Minimum="{x:Static a:CommonAcConsts.TemperatureMinimum}" Maximum="{x:Static a:CommonAcConsts.TemperatureMaximum}"
                Value="{Binding Temperature}" TickFrequency="6" IsSnapToTickEnabled="False" TickPlacement="BottomRight"
                IsEnabled="{Binding RandomTemperature, Converter={StaticResource InvertBooleanConverter}}" SmallChange="5" LargeChange="5" />
            <Path Data="{StaticResource AlertIconData}" Width="16" Height="16" Fill="{DynamicResource Error}" Stretch="Uniform"
                Visibility="{Binding IsTemperatureClamped, Converter={StaticResource BooleanToVisibilityConverter}}"
                ToolTip="{x:Static g:AppStrings.Drive_Temperature_Warning}" HorizontalAlignment="Right" Margin="0 0 0 -8" />
          </mui:Cell>
        </StackPanel>

        <StackPanel Margin="0 0 8 16" Grid.Row="0" Grid.Column="2" VerticalAlignment="Center">
          <DockPanel DataContext="{Binding AssistsViewModel}" Margin="0 0 0 4">
            <mui:ContextMenuButton DockPanel.Dock="Right" Padding="4 0">
              <c:ModernPopup Padding="16 12 16 16">
                <!-- ReSharper disable once Xaml.BindingWithContextNotResolved -->
                <uc:TrackStateEditor DataContext="{Binding Data.TrackState, Source={StaticResource Model}}" />
              </c:ModernPopup>
            </mui:ContextMenuButton>

            <TextBlock Text="{x:Static g:AppStrings.Drive_TrackStateLabel}" Style="{StaticResource Label.Padding}" />
          </DockPanel>
          <c:UserPresetsControl UserPresetable="{Binding TrackState}" ShowSaveButton="False" />
          <!--<ComboBox Margin="4 0 4 0" ItemsSource="{Binding TrackPropertiesPresets}" SelectedItem="{Binding SelectedTrackPropertiesPreset}" />-->
        </StackPanel>

        <DockPanel Grid.Row="1" Grid.Column="2" Background="Transparent" mui:ContextMenuAdvancement.PropagateToChildren="True" VerticalAlignment="Center">
          <DockPanel.IsEnabled>
            <MultiBinding Converter="{StaticResource AndConverter}">
              <Binding Path="ManualWind" />
              <Binding Path="SelectedWeatherWrapped.ControllerRef.FollowsSelectedWind" FallbackValue="True" />
            </MultiBinding>
          </DockPanel.IsEnabled>

          <DockPanel.ContextMenu>
            <ContextMenu>
              <MenuItem Header="{x:Static g:AppStrings.QuickDrive_Wind_MetersPerSecond}" IsCheckable="True" IsChecked="{mui:Stored windSpeedInMetersPerSecond}" />
              <MenuItem Header="{x:Static g:AppStrings.QuickDrive_Wind_RelativeRange}" IsCheckable="True"
                  IsChecked="{mui:Stored 'windSpeedRelativeRange=True'}" />
              <MenuItem Header="{x:Static g:AppStrings.QuickDrive_Wind_Degrees}" IsCheckable="True" IsChecked="{mui:Stored windDirectionInDegrees}" />
              <MenuItem IsCheckable="True" IsChecked="{Binding RandomWindSpeed}" Header="{x:Static g:AppStrings.QuickDrive_Wind_RandomSpeed}"
                  DataContext="{Binding Data, Source={StaticResource Model}}" d:DataContext="{d:DesignInstance dr:QuickDrive+ViewModel}" />
              <MenuItem IsCheckable="True" IsChecked="{Binding RandomWindDirection}" Header="{x:Static g:AppStrings.QuickDrive_Wind_RandomDirection}"
                  DataContext="{Binding Data, Source={StaticResource Model}}" d:DataContext="{d:DesignInstance dr:QuickDrive+ViewModel}" />
            </ContextMenu>
          </DockPanel.ContextMenu>

          <mui:RoundSlider Minimum="0" Maximum="360" TickFrequency="22.5" Value="{Binding WindDirectionFlipped}" DockPanel.Dock="Right" Margin="4 -14 0 0"
              TickPlacement="Both" IsSnapToTickEnabled="{Binding Value, ElementName=WindDirectionSwitch, Converter={StaticResource InvertBooleanConverter}}"
              IsEnabled="{Binding RandomWindDirection, Converter={StaticResource InvertBooleanConverter}}">
            <mui:RoundSlider.Content>
              <Viewbox Stretch="Uniform" StretchDirection="DownOnly" HorizontalAlignment="Center" VerticalAlignment="Center" Width="24" Height="24">
                <mui:BooleanSwitch x:Name="WindDirectionSwitch">
                  <mui:BooleanSwitch.Value>
                    <MultiBinding Converter="{StaticResource AndConverter}">
                      <Binding Path="RandomWindDirection" Converter="{StaticResource InvertBooleanConverter}" />
                      <mui:Stored Key="windDirectionInDegrees" />
                    </MultiBinding>
                  </mui:BooleanSwitch.Value>
                  <mui:BooleanSwitch.False>
                    <TextBlock Text="{Binding DisplayWindDirection}" Style="{StaticResource Label}" Padding="0 0 0 2" />
                  </mui:BooleanSwitch.False>
                  <mui:BooleanSwitch.True>
                    <mui:ValueLabel Value="{Binding WindDirection, StringFormat='{}{0:F0}'}" Postfix="°" VerticalAlignment="Center" Padding="3 0 0 0"
                        Margin="0 1 0 -1" />
                  </mui:BooleanSwitch.True>
                </mui:BooleanSwitch>
              </Viewbox>
            </mui:RoundSlider.Content>
          </mui:RoundSlider>

          <mui:BooleanSwitch Value="{Binding RandomWindSpeed}" DockPanel.Dock="Top">
            <mui:BooleanSwitch.True>
              <TextBlock Background="Transparent" Style="{StaticResource Label}" Padding="8 0 0 0" Margin="0 0 0 2">
                <TextBlock.Text>
                  <MultiBinding StringFormat="{x:Static mui:ColonConverter.FormatBoth}">
                    <Binding Source="Wind" />
                    <Binding Source="{x:Static g:AppStrings.Drive_Time_Random}" />
                  </MultiBinding>
                </TextBlock.Text>
              </TextBlock>
            </mui:BooleanSwitch.True>
            <mui:BooleanSwitch.False>
              <mui:BooleanSwitch Value="{mui:Stored windSpeedInMetersPerSecond}" Margin="0 0 0 -2">
                <mui:BooleanSwitch.True>
                  <mui:BooleanSwitch Value="{Binding UseImperialUnits, Source={x:Static t:SettingsHolder.Common}}">
                    <mui:BooleanSwitch.True>
                      <mui:DoubleValueLabel Content="{x:Static g:AppStrings.QuickDrive_Wind}" Postfix="{x:Static t:ToolsStrings.Common_FeetPerSecondPostfix}"
                          JoinIfEqual="True" RelativeRange="{mui:Stored 'windSpeedRelativeRange=True'}" RelativeRangeStringFormat="0.#"
                          Value="{Binding WindSpeedMin, StringFormat='{}{0:F1}',
                                                                Converter={StaticResource MultiplyConverter}, ConverterParameter=0.911344}"
                          SecondValue="{Binding WindSpeedMax, StringFormat='{}{0:F1}',
                                                                Converter={StaticResource MultiplyConverter}, ConverterParameter=0.911344}" />
                    </mui:BooleanSwitch.True>
                    <mui:BooleanSwitch.False>
                      <mui:DoubleValueLabel Content="{x:Static g:AppStrings.QuickDrive_Wind}" Postfix="{x:Static t:ToolsStrings.Common_MetersPerSecondPostfix}"
                          JoinIfEqual="True" RelativeRange="{mui:Stored 'windSpeedRelativeRange=True'}" RelativeRangeStringFormat="0.#"
                          Value="{Binding WindSpeedMin, StringFormat='{}{0:F1}',
                                                                Converter={StaticResource MultiplyConverter}, ConverterParameter=0.277778}"
                          SecondValue="{Binding WindSpeedMax, StringFormat='{}{0:F1}',
                                                                Converter={StaticResource MultiplyConverter}, ConverterParameter=0.277778}" />
                    </mui:BooleanSwitch.False>
                  </mui:BooleanSwitch>
                </mui:BooleanSwitch.True>
                <mui:BooleanSwitch.False>
                  <mui:DoubleValueLabel Content="{x:Static g:AppStrings.QuickDrive_Wind}"
                      Postfix="{x:Static t:SettingsHolder+CommonSettings.SpaceSpeedPostfix}" JoinIfEqual="True"
                      RelativeRange="{mui:Stored 'windSpeedRelativeRange=True'}" RelativeRangeStringFormat="0.#"
                      Value="{Binding WindSpeedMin, Converter={StaticResource MultiplyConverter}, ConverterParameter={x:Static t:SettingsHolder+CommonSettings.DistanceMultiplier}, StringFormat='{}{0:F1}'}"
                      SecondValue="{Binding WindSpeedMax, Converter={StaticResource MultiplyConverter}, ConverterParameter={x:Static t:SettingsHolder+CommonSettings.DistanceMultiplier}, StringFormat='{}{0:F1}'}" />
                </mui:BooleanSwitch.False>
              </mui:BooleanSwitch>
            </mui:BooleanSwitch.False>
          </mui:BooleanSwitch>

          <mui:DoubleSlider Minimum="0" Maximum="35" From="{Binding WindSpeedMin}" To="{Binding WindSpeedMax}" Margin="0 0 0 4" TickFrequency="7"
              TickPlacement="BottomRight" IsSnapToTickEnabled="False" SmallChange="7" LargeChange="7" BindingMode="FromToFixed"
              IsEnabled="{Binding RandomWindSpeed, Converter={StaticResource InvertBooleanConverter}}"
              mui:FancyHintsService.Hint="{Binding Id, Source={x:Static c:FancyHints.DoubleSlider}}" mui:FancyHintsService.HorizontalContentAlignment="Right"
              mui:FancyHintsService.AttachTo="{x:Type Thumb}" />
        </DockPanel>

        <!--<StackPanel Grid.Row="1" Grid.Column="2">
          <mui:ValueLabel Value="{Binding TimeMultipler}" Postfix="×" Content="{x:Static g:AppStrings.Drive_TimeMultiplerLabel}" />
          <Slider Minimum="{Binding TimeMultiplerMinimum}" Maximum="{Binding TimeMultiplerMaximumLimited}" Value="{Binding TimeMultipler}"
              Margin="0 0 0 4" TickFrequency="6" TickPlacement="BottomRight" IsSnapToTickEnabled="False" />
        </StackPanel>-->
      </Grid>
    </Grid>

    <mui:Cell Grid.Row="1">
      <mui:ModernTabSplitter Foreground="Transparent" Height="8" DragDelta="OnTopRowSeparatorDrag" Panel.ZIndex="-1" DockPanel.Dock="Right" Margin="0 6 0 6" />
    </mui:Cell>

    <Grid Grid.Row="2">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="Auto" />
        <ColumnDefinition />
      </Grid.ColumnDefinitions>

      <mui:SpacingStackPanel x:Name="LeftPanel" Width="180" Margin="0 0 20 0" Spacing="8">
        <c:BestLapsList CarId="{Binding SelectedCar.Id}" TrackId="{Binding SelectedTrack.IdWithLayout}" />
        <TextBlock Text="{x:Static g:AppStrings.QuickDrive_BestLapOnThisTrack}" Style="{StaticResource Label}" />
        <c:BestLapsList TrackId="{Binding SelectedTrack.IdWithLayout}" Limit="1" Order="FastestFirst" ShowTitle="False" EntryPadding="0" />

        <DockPanel Margin="0 20 0 0">
          <mui:PlaceholderTextBlock DockPanel.Dock="Right" Width="80" Placeholder="…"
              Text="{Binding Path=SelectedCar.TotalDrivenDistance, Converter={StaticResource MultiplyConverter}, ConverterParameter=1e-3, StringFormat={x:Static t:ToolsStrings.Common_DistanceLarge_Format}}" />
          <TextBlock Text="{x:Static g:AppStrings.QuickDrive_DrivenInCar}" Style="{StaticResource Label}" />
        </DockPanel>

        <DockPanel>
          <mui:PlaceholderTextBlock DockPanel.Dock="Right" Width="80" Placeholder="…"
              Text="{Binding SelectedTrack.TotalDrivenDistance, Converter={StaticResource MultiplyConverter}, ConverterParameter=1e-3, StringFormat={x:Static t:ToolsStrings.Common_DistanceLarge_Format}}" />
          <TextBlock Text="{x:Static g:AppStrings.QuickDrive_DrivenOnTrack}" Style="{StaticResource Label}" />
        </DockPanel>

        <c:UserPresetsControl UserPresetable="{Binding AssistsViewModel}" ShowSaveButton="False" Margin="0 20 0 0" />

        <DockPanel DataContext="{Binding AssistsViewModel}">
          <mui:ContextMenuButton DockPanel.Dock="Right" VerticalAlignment="Center"
              mui:FancyHintsService.Hint="{Binding Id, Source={x:Static c:FancyHints.MoreDriveAssists}}" Click="OnAssistsContextMenuButtonClick">
            <c:ModernPopup Padding="16 12 16 16">
              <DockPanel DataContext="{Binding Data, Source={StaticResource Model}}" d:DataContext="{d:DesignInstance {x:Type dr:QuickDrive+ViewModel}}">
                <CheckBox IsChecked="{Binding LoadAssistsWithQuickDrivePreset, Source={x:Static t:SettingsHolder.Drive}}" Margin="0 0 0 12"
                    DockPanel.Dock="Top" ToolTip="{x:Static g:AppStrings.QuickDrive_LoadAssistsWithQuickDrivePresets_Tooltip}">
                  <Label Content="{x:Static g:AppStrings.QuickDrive_LoadAssistsWithQuickDrivePresets}" />
                </CheckBox>
                <Separator Margin="0 0 0 12" DockPanel.Dock="Top" Background="{DynamicResource SeparatorBackground}" />
                <uc:AssistsEditor DataContext="{Binding AssistsViewModel}" />
              </DockPanel>
            </c:ModernPopup>
          </mui:ContextMenuButton>

          <CheckBox IsChecked="{Binding TyreBlankets}" VerticalAlignment="Center">
            <Label Content="{x:Static g:AppStrings.Drive_TyreBlankets}" />
          </CheckBox>
        </DockPanel>

        <CheckBox IsChecked="{Binding SelectedCar.SpecificControlsPreset}" Margin="0 20 0 0">
          <Label Content="{x:Static g:AppStrings.QuickDrive_CarSpecificControls}" />
        </CheckBox>

        <mui:BooleanLazySwitch Value="{Binding SelectedCar.SpecificControlsPreset}" TrueResourceKey="CarSpecificControlsComboBox" CollapseIfMissing="True" />
        <mui:BooleanLazySwitch Value="{Binding AllowToOverridePerCar, Source={x:Static t:AcSettingsHolder.Fanatec}}" TrueResourceKey="CarSpecificFanatecPanel"
            CollapseIfMissing="True" />

        <DockPanel
            Visibility="{Binding QuickDriveAllowCustomData, Source={x:Static t:SettingsHolder.Drive}, Converter={StaticResource BooleanToVisibilityConverter}}">
          <mui:ContextMenuButton DockPanel.Dock="Right" VerticalAlignment="Center">
            <ContextMenu>
              <MenuItem Header="{x:Static g:AppStrings.QuickDrive_UseUnpackedDataGlobal}" IsCheckable="True"
                  IsChecked="{Binding SelectedCar.UseCustomDataGlobal}" />
              <MenuItem Header="{x:Static g:AppStrings.QuickDrive_UseUnpackedData_ResetCarSpecificFlag}"
                  Command="{Binding SelectedCar.ResetUseSpecificDataFlagCommand}" />
            </ContextMenu>
          </mui:ContextMenuButton>
          <CheckBox IsChecked="{Binding SelectedCar.UseCustomData}" Margin="0 0 0 0">
            <Label Content="{x:Static g:AppStrings.QuickDrive_UseUnpackedDataIfExists}" />
          </CheckBox>
        </DockPanel>

        <Border ToolTip="This feature is experimental. If you’d experience any issues with online servers after using it, please run Steam integrity check."
            Visibility="{Binding QuickDriveAllowExtendedPhysics, Source={x:Static t:SettingsHolder.Drive}, Converter={StaticResource BooleanToVisibilityConverter}}">
          <DockPanel c:FeatureIsAvailable.Feature="{x:Static t:PatchHelper.FeatureFullDay}">
            <mui:ContextMenuButton DockPanel.Dock="Right" VerticalAlignment="Center">
              <ContextMenu>
                <MenuItem Header="Use extended physics (global)" IsCheckable="True" IsChecked="{Binding SelectedCar.UseExtendedPhysicsGlobal}" />
                <MenuItem Header="{x:Static g:AppStrings.QuickDrive_UseUnpackedData_ResetCarSpecificFlag}"
                    Command="{Binding SelectedCar.ResetUseExtendedPhysicsFlagCommand}" />
              </ContextMenu>
            </mui:ContextMenuButton>
            <CheckBox IsChecked="{Binding SelectedCar.UseExtendedPhysics}" Margin="0 0 0 0"
                mui:FancyHintsService.Hint="{Binding Id, Source={x:Static c:FancyHints.ExtendedPhysics}, Mode=OneTime}"
                mui:FancyHintsService.HorizontalAlignment="Left">
              <Label Content="Use extended physics" />
            </CheckBox>
          </DockPanel>
        </Border>
      </mui:SpacingStackPanel>

      <mui:ModernTab Grid.Column="1" LinksMargin="0 0 0 20" FrameMargin="0 0 0 4" LinksHorizontalAlignment="Left"
          SelectedSource="{Binding SelectedMode, Mode=TwoWay}" x:Name="ModeTab" FrameNavigated="OnModeTabNavigated" VerticalAlignment="Stretch"
          ContentLoader="{x:Static dr:QuickDrive.ContentLoader}" Layout="TabWithLinksLists" mui:ModernFrame.KeepAlive="False"
          mui:ModernFrame.KeepContentAlive="False">
        <mui:ModernTab.LinksListBoxTemplate>
          <ControlTemplate>
            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="Left" />
          </ControlTemplate>
        </mui:ModernTab.LinksListBoxTemplate>
        <mui:ModernTab.Links>
          <mui:Link DisplayName="{x:Static t:ToolsStrings.Session_Practice}" Source="/Pages/Drive/QuickDrive_Practice.xaml" />
          <mui:Link DisplayName="{x:Static t:ToolsStrings.Session_Hotlap}" Source="/Pages/Drive/QuickDrive_Hotlap.xaml" />
          <mui:Link DisplayName="{x:Static t:ToolsStrings.Session_Race}" Source="/Pages/Drive/QuickDrive_Race.xaml" />
          <mui:Link DisplayName="{x:Static t:ToolsStrings.Session_TrackDay}" Source="/Pages/Drive/QuickDrive_Trackday.xaml" />
          <mui:Link DisplayName="{x:Static t:ToolsStrings.Common_Weekend}" Source="/Pages/Drive/QuickDrive_Weekend.xaml" />
          <mui:Link DisplayName="{x:Static t:ToolsStrings.Session_Drift}" Source="/Pages/Drive/QuickDrive_Drift.xaml" />
          <mui:LinksList x:Name="LinksList" DisplayName="{x:Static g:AppStrings.QuickDrive_Mode_More}">
            <mui:Link DisplayName="{x:Static t:ToolsStrings.Session_Drag}" Source="/Pages/Drive/QuickDrive_Drag.xaml" />
            <mui:Link DisplayName="{x:Static t:ToolsStrings.Session_TimeAttack}" Source="/Pages/Drive/QuickDrive_TimeAttack.xaml" />
          </mui:LinksList>
        </mui:ModernTab.Links>
      </mui:ModernTab>
    </Grid>

    <StackPanel Grid.Row="3" Margin="0 16 0 0" HorizontalAlignment="Right" Orientation="Horizontal">
      <c:UserPresetsControl x:Name="UserPresetsControl" Margin="0 0 4 0" UserPresetable="{Binding}" MinWidth="300" />
      <Button Command="{Binding ShareCommand}" Margin="0 0 4 0" ToolTip="{x:Static g:AppStrings.Common_Share_SettingsTooltip}"
          Content="{x:Static g:AppStrings.Common_Share}" />
      <mui:BooleanSwitch Value="{Binding SelectedCarRepairSuggestions.Count, Converter={StaticResource MoreConverter}, FallbackValue=False}">
        <Button Command="{Binding RepairCarCommand}" Margin="0 0 4 0" Style="{StaticResource Error.Button}">
          <Button.ToolTip>
            <Binding Path="SelectedCarRepairSuggestions.Count" Converter="{StaticResource PluralizingConverter}"
                ConverterParameter="{x:Static g:AppStrings.QuickDrive_FixCar_Tooltip}" />
          </Button.ToolTip>
          <TextBlock Text="{x:Static g:AppStrings.QuickDrive_FixCar}" />
        </Button>
      </mui:BooleanSwitch>
      <Button Command="{Binding GoCommand}" Style="{StaticResource Go.Button}">
        <Button.ToolTip>
          <mui:FallbackSwitch>
            <TextBlock mui:FallbackSwitch.Value="{Binding SelectedModeViewModel.TrackDoesNotFit}" mui:FallbackSwitch.WhenNot="{x:Null}" 
                Text="{Binding SelectedModeViewModel.TrackDoesNotFit.Item1}" />
            <TextBlock mui:FallbackSwitch.Value="{Binding SelectedModeViewModel.CarDoesNotFit}" mui:FallbackSwitch.WhenNot="{x:Null}" 
                Text="{Binding SelectedModeViewModel.CarDoesNotFit.Item1}" />
            <TextBlock mui:FallbackSwitch.Value="{Binding SelectedModeViewModel.HasAnyRestrictions}" mui:FallbackSwitch.When="True" 
                Text="Restrictions or ballast are active" />
          </mui:FallbackSwitch>
        </Button.ToolTip>
        <DockPanel>
          <mui:FallbackSwitch>
            <Path mui:FallbackSwitch.Value="{Binding SelectedModeViewModel.CarOrTrackDoesNotFit}" mui:FallbackSwitch.When="True" 
                Data="{StaticResource AlertIconData}" Width="12" Height="12" DockPanel.Dock="Left" Fill="{DynamicResource Error}" Stretch="Uniform"
                Visibility="{Binding SelectedModeViewModel.CarOrTrackDoesNotFit, Converter={StaticResource BooleanToVisibilityConverter}}" Margin="2 2 4 0"
                VerticalAlignment="Center" />
            <Path mui:FallbackSwitch.Value="{Binding SelectedModeViewModel.HasAnyRestrictions}" mui:FallbackSwitch.When="True" 
                Data="{StaticResource GearIconData}" Width="12" Height="12" DockPanel.Dock="Left" Fill="{DynamicResource Go}" Stretch="Uniform"
                Visibility="{Binding SelectedModeViewModel.HasAnyRestrictions, Converter={StaticResource BooleanToVisibilityConverter}}" Margin="2 2 4 0"
                VerticalAlignment="Center" />
          </mui:FallbackSwitch>
          <TextBlock Text="{x:Static g:AppStrings.Common_Go}" />
        </DockPanel>
      </Button>
    </StackPanel>
  </Grid>
</UserControl>