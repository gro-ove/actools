<UserControl x:Class="AcManager.Pages.Drive.SpecialEvents" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mui="http://firstfloorsoftware.com/ModernUI"
    xmlns:dr="clr-namespace:AcManager.Pages.Drive" xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" xmlns:g="clr-namespace:AcManager"
    xmlns:c="http://acstuff.ru/app/controls" xmlns:t="http://acstuff.ru/app/tools" xmlns:uc="clr-namespace:AcManager.UserControls" mc:Ignorable="d"
    d:DataContext="{d:DesignInstance dr:SpecialEvents+ViewModel}" Loaded="OnLoaded" Unloaded="OnUnloaded" SizeChanged="OnSizeChanged" x:Name="This">
  <UserControl.Resources>
    <ResourceDictionary>
      <ResourceDictionary.MergedDictionaries>
        <mui:SharedResourceDictionary Source="/AcManager.Controls;component/Assets/AcSpecific.xaml" />
        <mui:SharedResourceDictionary Source="/AcManager.Controls;component/Assets/AcItemWrapperSpecific.xaml" />
        <mui:SharedResourceDictionary Source="/AcManager.Controls;component/Assets/SettingsSpecific.xaml" />
        <mui:SharedResourceDictionary Source="/AcManager.Controls;component/Assets/IconData.xaml" />
      </ResourceDictionary.MergedDictionaries>

      <c:PlaceToBrushConverter x:Key="RacePlaceToColorConverter" FirstPlaceBrush="{StaticResource UltimateBrush}"
          SecondPlaceBrush="{DynamicResource GoldBrush}" ThirdPlaceBrush="{DynamicResource SilverBrush}" ForthPlaceBrush="{DynamicResource BronzeBrush}"
          DefaultBrush="Transparent" />

      <DataTemplate x:Key="ItemTemplate" DataType="{x:Type t:SpecialEventObject}">
        <Border x:Name="PlaceBorder" Margin="-2" BorderThickness="2" BorderBrush="{Binding TakenPlace, Converter={StaticResource PlaceToColorConverter}}">
          <mui:Cell Background="{DynamicResource ThumbnailBackground}" ClipToBounds="True">
            <mui:BetterImage x:Name="PreviewImage" Filename="{Binding PreviewImage}" Stretch="UniformToFill" StretchDirection="DownOnly" ClearOnChange="True"
                ForceFill="True" />
            <TextBlock x:Name="TopPanel" Padding="4" VerticalAlignment="Top" Background="{StaticResource DarkenPanel}" Text="{Binding DisplayName}"
                Foreground="White" TextAlignment="Right" FontSize="{DynamicResource SmallFontSize}">
              <TextBlock.RenderTransform>
                <TranslateTransform />
              </TextBlock.RenderTransform>
            </TextBlock>
            <StackPanel VerticalAlignment="Bottom" Background="{StaticResource DarkenPanel}" x:Name="BottomPanel"
                TextBlock.FontSize="{DynamicResource SmallFontSize}" TextBlock.Foreground="White">
              <StackPanel.RenderTransform>
                <TranslateTransform />
              </StackPanel.RenderTransform>
              <TextBlock Margin="4 4 24 0" Text="{Binding CarObject.DisplayName}" />
              <TextBlock Margin="4 0 24 4" Text="{Binding DisplayType}" />
            </StackPanel>
            <Ellipse x:Name="PlaceEllipse" Width="8" Height="8" Margin="8 12" VerticalAlignment="Bottom" HorizontalAlignment="Right"
                Fill="{Binding TakenPlace, Converter={StaticResource PlaceToColorConverter}}" />
          </mui:Cell>
        </Border>
        <DataTemplate.Triggers>
          <DataTrigger Binding="{Binding ConditionType}" Value="{x:Null}">
            <Setter TargetName="PlaceEllipse" Property="Fill" Value="{Binding TakenPlace, Converter={StaticResource RacePlaceToColorConverter}}" />
            <Setter TargetName="PlaceBorder" Property="BorderBrush" Value="{Binding TakenPlace, Converter={StaticResource RacePlaceToColorConverter}}" />
          </DataTrigger>
          <DataTrigger Binding="{Binding TakenPlace}" Value="1">
            <Setter TargetName="PreviewImage" Property="Effect">
              <Setter.Value>
                <mui:GrayscaleEffect SaturationFactor="0" />
              </Setter.Value>
            </Setter>
          </DataTrigger>
          <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType=ListBoxItem}}" Value="True">
            <DataTrigger.EnterActions>
              <BeginStoryboard>
                <Storyboard>
                  <DoubleAnimation Duration="0:0:0.20" To="-21" FillBehavior="HoldEnd" Storyboard.TargetName="TopPanel"
                      Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)" EasingFunction="{StaticResource AccelerationEase}" />
                  <DoubleAnimation Duration="0:0:0.30" To="34" FillBehavior="HoldEnd" Storyboard.TargetName="BottomPanel"
                      Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)" EasingFunction="{StaticResource AccelerationEase}" />
                </Storyboard>
              </BeginStoryboard>
            </DataTrigger.EnterActions>
            <DataTrigger.ExitActions>
              <BeginStoryboard>
                <Storyboard>
                  <DoubleAnimation Duration="0:0:0.20" To="0" FillBehavior="HoldEnd" Storyboard.TargetName="TopPanel"
                      Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)" EasingFunction="{StaticResource DecelerationEase}" />
                  <DoubleAnimation Duration="0:0:0.30" To="0" FillBehavior="HoldEnd" Storyboard.TargetName="BottomPanel"
                      Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)" EasingFunction="{StaticResource DecelerationEase}" />
                </Storyboard>
              </BeginStoryboard>
            </DataTrigger.ExitActions>
          </DataTrigger>
        </DataTemplate.Triggers>
      </DataTemplate>
    </ResourceDictionary>
  </UserControl.Resources>

  <mui:Switch Value="{Binding List.Count}" Style="{StaticResource ContentRootWithPadding}" ResetElementNameBindings="True">
    <mui:Cell mui:Switch.When="0">
      <TextBlock Text="{x:Static g:AppStrings.Online_NothingToDisplay}" Style="{StaticResource Heading1}" TextAlignment="Center" />
    </mui:Cell>

    <Grid x:Name="ContentGrid">
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto" />
        <RowDefinition Height="1*" MinHeight="250" />
        <RowDefinition Height="1*" MaxHeight="280" />
      </Grid.RowDefinitions>

      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="Auto" />
        <ColumnDefinition Width="*" />
        <ColumnDefinition Width="440" />
      </Grid.ColumnDefinitions>

      <DockPanel Grid.ColumnSpan="3"
          Visibility="{Binding ActualHeight, ElementName=ContentGrid, Converter={StaticResource MoreToVisibilityConverter}, ConverterParameter=540}">
        <mui:Switch Value="{Binding SelectedStarterType.Id, Source={x:Static t:SettingsHolder.Drive}}" DockPanel.Dock="Right" Margin="4 0 0 0">
          <Button mui:Switch.When="Steam" Command="{Binding SyncronizeProgressUsingSteamStarterCommand}"
              Content="{x:Static g:AppStrings.SpecialEvents_SyncProgress}" />
          <Button mui:Switch.When="AppID" Command="{Binding SyncronizeProgressUsingAppIdStarterCommand}"
              Content="{x:Static g:AppStrings.SpecialEvents_SyncProgress}" />
          <mui:SpacingStackPanel Spacing="4" Orientation="Horizontal">
            <Button Command="{Binding SyncronizeProgressUsingModuleCommand}"
                ToolTip="Works with private Steam profiles, but UI module should be installed and AC launcher should be running"
                Content="{x:Static g:AppStrings.SpecialEvents_SyncProgress}" />
            <Button Command="{Binding SyncronizeProgressUsingSidePassageCommand}"
                ToolTip="Works with private Steam profiles, but AC Service should be used as a starter"
                Content="{x:Static g:AppStrings.SpecialEvents_SyncProgress}" />
            <Button Command="{Binding SyncronizeProgressCommand}" ToolTip="Works only with non-private Steam profiles"
                Content="{x:Static g:AppStrings.SpecialEvents_SyncProgress}" />
          </mui:SpacingStackPanel>
        </mui:Switch>

        <mui:SpacingStackPanel>
          <TextBlock Text="{Binding ProgressAny}" Style="{StaticResource Heading2}" VerticalAlignment="Center" />
          <TextBlock Text="{Binding ProgressTop}" Style="{StaticResource Small}" VerticalAlignment="Center" />
        </mui:SpacingStackPanel>
      </DockPanel>

      <ListBox x:Name="ListBox" Grid.Row="1" Grid.ColumnSpan="3" Grid.Column="0" ItemsSource="{Binding List}" ScrollViewer.CanContentScroll="True"
          ScrollViewer.HorizontalScrollBarVisibility="Auto" ScrollViewer.VerticalScrollBarVisibility="Disabled" Margin="-4 0 -4 12"
          ScrollViewer.ScrollChanged="OnScrollChanged" SizeChanged="OnScrollSizeChanged" mui:FancyScroll.Outside="True">
        <i:Interaction.Behaviors>
          <mui:HorizontalScrollBehavior />
        </i:Interaction.Behaviors>
        <ListBox.ItemContainerStyle>
          <Style TargetType="ListBoxItem" BasedOn="{StaticResource FlatListBoxItem}">
            <Setter Property="FontWeight" Value="Normal" />
            <Setter Property="Padding" Value="4" />

            <Style.Triggers>
              <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource ItemTextHover}" />
              </Trigger>
              <Trigger Property="IsSelected" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource ItemTextSelected}" />
                <Setter Property="FontWeight" Value="Normal" />
              </Trigger>
              <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource ItemTextDisabled}" />
              </Trigger>
            </Style.Triggers>
          </Style>
        </ListBox.ItemContainerStyle>
        <ListBox.ItemsPanel>
          <ItemsPanelTemplate>
            <mui:VirtualizingTilePanel Orientation="Vertical" VerticalContentAlignment="Center" Loaded="TilePanel_OnLoaded" />
          </ItemsPanelTemplate>
        </ListBox.ItemsPanel>
        <ListBox.ItemTemplate>
          <DataTemplate DataType="{x:Type t:AcItemWrapper}">
            <ContentControl Content="{Binding Value}" ContentTemplate="{StaticResource ItemTemplate}" />
          </DataTemplate>
        </ListBox.ItemTemplate>
      </ListBox>

      <Grid Grid.Row="2" Grid.Column="1" Margin="0 20 0 0" DataContext="{Binding Selected}" x:Name="PropertiesPanel">
        <Grid.Resources>
          <Style TargetType="DockPanel">
            <Setter Property="Margin" Value="0 0 8 8" />
          </Style>
          <Style TargetType="Label" BasedOn="{StaticResource {x:Type Label}}">
            <Setter Property="Margin" Value="0 0 0 4" />
            <Setter Property="DockPanel.Dock" Value="Top" />
          </Style>
          <Style x:Key="Value" TargetType="TextBlock" BasedOn="{StaticResource Heading1}">
            <Setter Property="FontSize" Value="20" />
            <Setter Property="Margin" Value="20 0 0 0" />
          </Style>
        </Grid.Resources>
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="2*" />
          <ColumnDefinition Width="1.5*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
          <RowDefinition Height="Auto" />
          <RowDefinition Height="Auto" />
          <RowDefinition Height="Auto" />
          <RowDefinition Height="Auto" />
          <RowDefinition Height="Auto" />
          <RowDefinition />
        </Grid.RowDefinitions>

        <!-- Event errors -->
        <c:AcObjectErrorsSection AcObject="{Binding}" Grid.ColumnSpan="2" />

        <!-- Event params -->
        <DockPanel Grid.Column="0" Grid.Row="1">
          <Label Content="{x:Static g:AppStrings.KunosCareer_TimeLabel}" />
          <TextBlock Text="{Binding DisplayTime}" Style="{StaticResource Value}" />
        </DockPanel>
        <DockPanel Grid.Column="1" Grid.Row="1">
          <Label Content="{x:Static g:AppStrings.KunosCareer_WeatherLabel}" />
          <TextBlock Text="{Binding WeatherObject.DisplayName}" Style="{StaticResource Value}" />
        </DockPanel>
        <DockPanel Grid.Column="0" Grid.Row="2">
          <Label Content="{x:Static g:AppStrings.KunosCareer_TemperatureLabel}" />
          <c:TemperatureBlock Text="{Binding Temperature}" Style="{StaticResource Value}" />
          <DockPanel.ToolTip>
            <c:TemperatureBlock Prefix="{x:Static g:AppStrings.Common_RoadTemperature}" Rounding="0.1" Text="{Binding RoadTemperature}" />
          </DockPanel.ToolTip>
        </DockPanel>
        <DockPanel Grid.Column="1" Grid.Row="2">
          <Label Content="{x:Static g:AppStrings.KunosCareer_TrackState}" />
          <TextBlock Text="{Binding TrackPreset.Name}" Style="{StaticResource Value}" />
        </DockPanel>

        <mui:SpacingStackPanel Spacing="4" Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="3" Grid.RowSpan="3" Margin="0 0 0 47" HorizontalAlignment="Left"
            VerticalAlignment="Bottom" Visibility="{Binding StartingPosition, Converter={StaticResource NullToVisibilityConverter}}">
          <c:BestLapsList x:Name="BestLapBlock" CarId="{Binding CarId}" TrackId="{Binding TrackObject.IdWithLayout}" />
          <TextBlock Text="{x:Static g:AppStrings.QuickDrive_BestLapOnThisTrack}" Style="{StaticResource Label}" />
          <c:BestLapsList TrackId="{Binding TrackObject.IdWithLayout}" Limit="1" Order="FastestFirst" ShowTitle="False" EntryPadding="0" />
        </mui:SpacingStackPanel>

        <!-- Race params -->
        <DockPanel Grid.Column="0" Grid.Row="4" Grid.ColumnSpan="2"
            Visibility="{Binding StartingPosition, Converter={StaticResource NullToVisibilityConverter}, ConverterParameter=inverse}">
          <Label Content="{x:Static g:AppStrings.KunosCareer_StartingPositionLabel}" />
          <TextBlock Style="{StaticResource Value}">
            <Run
                Text="{Binding StartingPosition, Mode=OneWay,
                Converter={StaticResource OrdinalizingConverter}, ConverterParameter={x:Static g:AppStrings.Drive_Ordinal_Parameter}}" />
            <Run Text="(" /><Run
                                Text="{Binding OpponentsCount, Mode=OneWay, Converter={StaticResource PluralizingConverter},
                ConverterParameter={x:Static c:ControlsStrings.Common_OpponentsFormat}}" /><Run
                Text=")" />
          </TextBlock>
        </DockPanel>
        <DockPanel Grid.Column="0" Grid.Row="4">
          <DockPanel.Style>
            <Style TargetType="DockPanel" BasedOn="{StaticResource {x:Type DockPanel}}">
              <Setter Property="Visibility" Value="Hidden" />
              <Style.Triggers>
                <MultiDataTrigger>
                  <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding StartingPosition}" Value="{x:Null}" />
                    <Condition Binding="{Binding Laps, Converter={StaticResource NullToVisibilityConverter}}" Value="Collapsed" />
                  </MultiDataTrigger.Conditions>
                  <MultiDataTrigger.Setters>
                    <Setter Property="Visibility" Value="Visible" />
                  </MultiDataTrigger.Setters>
                </MultiDataTrigger>
              </Style.Triggers>
            </Style>
          </DockPanel.Style>
          <Label Content="{x:Static g:AppStrings.KunosCareer_OpponentsLabel}" />
          <TextBlock Style="{StaticResource Value}" Text="{Binding OpponentsCount, Mode=OneWay}" />
        </DockPanel>

        <DockPanel Grid.Column="0" Grid.Row="3" Visibility="{Binding Laps, Converter={StaticResource NullToVisibilityConverter}, ConverterParameter=inverse}">
          <Label Content="{x:Static g:AppStrings.KunosCareer_LapsLabel}" />
          <TextBlock Text="{Binding Laps}" Style="{StaticResource Value}" />
        </DockPanel>
        <DockPanel Grid.Column="1" Grid.Row="3" Grid.RowSpan="2"
            Visibility="{Binding Laps, Converter={StaticResource NullToVisibilityConverter}, ConverterParameter=inverse}">
          <Label Content="{x:Static g:AppStrings.KunosCareer_AiLevelLabel}" />
          <TextBlock Text="{Binding AiLevel, StringFormat='{}{0}%'}" Style="{StaticResource Value}" />
        </DockPanel>
      </Grid>

      <!-- Car and track previews -->
      <ScrollViewer Grid.Row="2" Grid.Column="0" Width="240" Margin="0 0 24 0" DataContext="{Binding Selected}" HorizontalScrollBarVisibility="Disabled"
          VerticalScrollBarVisibility="Auto"
          Visibility="{Binding ActualWidth, ElementName=ContentGrid, Converter={StaticResource MoreToVisibilityConverter}, ConverterParameter=1000}">
        <mui:SpacingStackPanel Spacing="8" Width="240">
          <mui:Cell c:ContextMenus.Car="{Binding CarObject}" c:ContextMenus.CarSkin="{Binding CarSkin}" c:ToolTips.Car="{Binding CarObject}"
              mui:Draggable.Data="{Binding CarObject}" MouseLeftButtonUp="OnCarPreviewClick">
            <mui:BetterImage Filename="{Binding CarSkin.PreviewImage}" Width="240" />
            <DockPanel Background="{DynamicResource DarkStripeBackground}" VerticalAlignment="Bottom" TextBlock.Foreground="{DynamicResource DarkStripeText}">
              <mui:BetterImage Filename="{Binding CarObject.BrandBadge}" Width="16" Height="16" Margin="4 4 0 4"
                  Visibility="{Binding CarObject, Converter={StaticResource NullToVisibilityConverter}, ConverterParameter=inverse}" />
              <mui:ContextMenuButton Padding="2 0 6 0" DockPanel.Dock="Right" LookForParentMenu="True" />
              <TextBlock Text="{Binding CarObject.DisplayName}" Padding="4" />
            </DockPanel>
          </mui:Cell>

          <mui:Cell Width="240" Height="135" HorizontalAlignment="Center" VerticalAlignment="Top" c:ContextMenus.Track="{Binding TrackObject}"
              c:ToolTips.Track="{Binding TrackObject}" mui:Draggable.Data="{Binding TrackObject}">
            <mui:BetterImage Filename="{Binding TrackObject.PreviewImage}" Stretch="UniformToFill" MaxWidth="240" />
            <mui:BetterImage Filename="{Binding TrackObject.OutlineImage}" Stretch="Uniform" StretchDirection="DownOnly" MaxWidth="240" MaxHeight="135"
                HorizontalAlignment="Center" VerticalAlignment="Center" ShowBroken="False" />
            <DockPanel Background="{DynamicResource DarkStripeBackground}" VerticalAlignment="Bottom" TextBlock.Foreground="{DynamicResource DarkStripeText}">
              <mui:ContextMenuButton Padding="2 0 6 0" DockPanel.Dock="Right" LookForParentMenu="True" />
              <TextBlock Text="{Binding TrackObject.Name}" Padding="4" />
            </DockPanel>
          </mui:Cell>
        </mui:SpacingStackPanel>
      </ScrollViewer>

      <Grid Margin="12 0 0 0" Grid.Row="2" Grid.Column="2"
          Visibility="{Binding Selected, Converter={StaticResource NullToVisibilityConverter}, ConverterParameter=inverse}">
        <Grid.RowDefinitions>
          <RowDefinition Height="Auto" />
          <RowDefinition />
          <RowDefinition Height="Auto" />
          <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <StackPanel Grid.Row="0">
          <Grid>
            <Grid.ColumnDefinitions>
              <ColumnDefinition />
              <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <TextBlock Style="{StaticResource Heading1}" Text="{Binding Selected.DisplayName}" Margin="0 0 0 4" />
            <Ellipse Grid.Column="1" Width="16" Height="16" Margin="8 4" VerticalAlignment="Center" HorizontalAlignment="Right"
                Fill="{Binding Selected.TakenPlace, Converter={StaticResource PlaceToColorConverter}}"
                Visibility="{Binding Selected.ConditionType, Converter={StaticResource NullToVisibilityConverter}, ConverterParameter=inverse}" />
            <Ellipse Grid.Column="1" Width="16" Height="16" Margin="8 4" VerticalAlignment="Center" HorizontalAlignment="Right"
                Fill="{Binding Selected.TakenPlace, Converter={StaticResource RacePlaceToColorConverter}}"
                Visibility="{Binding Selected.ConditionType, Converter={StaticResource NullToVisibilityConverter}}" />
          </Grid>

          <TextBlock Style="{StaticResource Heading2}" Text="{Binding Selected.DisplayType}" Margin="0 0 0 4" TextTrimming="CharacterEllipsis" />
        </StackPanel>

        <ScrollViewer Grid.Row="1" HorizontalScrollBarVisibility="Disabled" Margin="0 0 0 12">
          <TextBlock Text="{Binding Selected.DisplayDescription}" TextWrapping="Wrap" />
        </ScrollViewer>

        <StackPanel Grid.Row="2" Margin="0 0 0 24"
            Visibility="{Binding Selected.ConditionType, Converter={StaticResource NullToVisibilityConverter}, ConverterParameter=inverse}">
          <TextBlock Style="{StaticResource Heading2}" Text="{Binding Selected.ConditionType, Converter={StaticResource EnumToDescriptionConverter}}" />
          <StackPanel Orientation="Horizontal">
            <DockPanel Background="Transparent" ToolTip="{Binding Selected.DisplayFirstPlaceStat}">
              <Ellipse Width="8" Height="8" Margin="0 4 8 4" Fill="{DynamicResource GoldBrush}" VerticalAlignment="Center" />
              <TextBlock Text="{Binding Selected.DisplayFirstPlaceTarget}" Style="{StaticResource TargetValue}"
                  IsEnabled="{Binding Selected.TakenPlace, Converter={StaticResource LessToBooleanConverter}, ConverterParameter=2}" />
            </DockPanel>

            <DockPanel Background="Transparent" ToolTip="{Binding Selected.DisplaySecondPlaceStat}">
              <Ellipse Width="8" Height="8" Margin="24 4 8 4" Fill="{DynamicResource SilverBrush}" VerticalAlignment="Center" />
              <TextBlock Text="{Binding Selected.DisplaySecondPlaceTarget}" Style="{StaticResource TargetValue}"
                  IsEnabled="{Binding Selected.TakenPlace, Converter={StaticResource LessToBooleanConverter}, ConverterParameter=3}" />
            </DockPanel>

            <DockPanel Background="Transparent" ToolTip="{Binding Selected.DisplayThirdPlaceStat}">
              <Ellipse Width="8" Height="8" Margin="24 4 8 4" Fill="{DynamicResource BronzeBrush}" VerticalAlignment="Center" />
              <TextBlock Text="{Binding Selected.DisplayThirdPlaceTarget}" Style="{StaticResource TargetValue}"
                  IsEnabled="{Binding Selected.TakenPlace, Converter={StaticResource LessToBooleanConverter}, ConverterParameter=4}" />
            </DockPanel>
          </StackPanel>
        </StackPanel>

        <StackPanel Grid.Row="2" Margin="0 0 0 24"
            Visibility="{Binding Selected.AiLevels, Converter={StaticResource NullToVisibilityConverter}, ConverterParameter=inverse}">
          <TextBlock Style="{StaticResource Heading2}" Text="{x:Static g:AppStrings.SpecialEvents_Difficulty}" />
          <ListBox ItemsSource="{Binding Selected.AiLevels}" SelectedItem="{Binding Selected.SelectedLevel}">
            <ListBox.ItemsPanel>
              <ItemsPanelTemplate>
                <StackPanel Orientation="Horizontal" />
              </ItemsPanelTemplate>
            </ListBox.ItemsPanel>
            <ListBox.ItemTemplate>
              <DataTemplate>
                <StackPanel Orientation="Horizontal">
                  <StackPanel.ToolTip>
                    <ToolTip>
                      <StackPanel>
                        <TextBlock Text="{Binding AiLevel, StringFormat='{}AI level: {0}%'}" />
                        <TextBlock Text="{Binding PlaceStat, StringFormat='{}Won by {0:F1}% AC players'}"
                            Visibility="{Binding PlaceStat, Converter={StaticResource MoreToVisibilityConverter}}" />
                      </StackPanel>
                    </ToolTip>
                  </StackPanel.ToolTip>
                  <Ellipse Width="8" Height="8" Margin="0 4 8 4" VerticalAlignment="Center"
                      Fill="{Binding Place, Converter={StaticResource RacePlaceToColorConverter}}" />
                  <TextBlock Text="{Binding DisplayName}" Style="{StaticResource TargetValue}">
                    <TextBlock.IsEnabled>
                      <MultiBinding Converter="{StaticResource MultiLessToBooleanConverter}" ConverterParameter="-1">
                        <Binding Path="DataContext.Selected.TakenPlace" ElementName="This" />
                        <Binding Path="Place" />
                      </MultiBinding>
                    </TextBlock.IsEnabled>
                  </TextBlock>
                </StackPanel>
              </DataTemplate>
            </ListBox.ItemTemplate>
            <ListBox.ItemContainerStyle>
              <Style TargetType="ListBoxItem" BasedOn="{StaticResource FlatListBoxItem}">
                <Setter Property="Padding" Value="2 2 8 2" />
                <Setter Property="Margin" Value="0 0 18 0" />
              </Style>
            </ListBox.ItemContainerStyle>
          </ListBox>
        </StackPanel>

        <StackPanel Orientation="Horizontal" Grid.Row="3" HorizontalAlignment="Right">
          <c:UserPresetsControl UserPresetable="{Binding Source={x:Static c:AssistsViewModel.Instance}}" ShowSaveButton="False" Margin="0 0 4 0" />

          <ToggleButton x:Name="AssistsButton" Content="…" Margin="0 0 4 0"
              IsHitTestVisible="{Binding ElementName=AssistsPopup, Path=IsOpen, Mode=OneWay, Converter={StaticResource InvertBooleanConverter}}">
            <ToggleButton.ToolTip>
              <c:AssistsDescription DataContext="{Binding Source={x:Static c:AssistsViewModel.Instance}}" />
            </ToggleButton.ToolTip>
          </ToggleButton>
          <c:ModernPopup x:Name="AssistsPopup" PlacementTarget="{Binding ElementName=AssistsButton}" Placement="Top"
              IsOpen="{Binding IsChecked, ElementName=AssistsButton, Mode=TwoWay}" Padding="16 12 16 16">
            <uc:AssistsEditor DataContext="{Binding Source={x:Static c:AssistsViewModel.Instance}}" />
          </c:ModernPopup>

          <Button Command="{Binding Selected.GoCommand}" Style="{StaticResource Go.Button}" VerticalAlignment="Bottom"
              Content="{x:Static g:AppStrings.Common_Go}" />
        </StackPanel>
      </Grid>
    </Grid>
  </mui:Switch>
</UserControl>