<UserControl x:Class="AcManager.Pages.AcSettings.AcSettingsControls_Wheel_System" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mui="http://firstfloorsoftware.com/ModernUI"
    xmlns:acset="clr-namespace:AcManager.Tools.Helpers.AcSettings;assembly=AcManager.Tools" xmlns:c="http://acstuff.club/app/controls"
    xmlns:acs="clr-namespace:AcManager.Tools.Helpers.AcSettingsControls;assembly=AcManager.Tools" xmlns:acsc="clr-namespace:AcManager.Pages.AcSettings"
    xmlns:g="clr-namespace:AcManager" mc:Ignorable="d" Loaded="OnLoaded" Unloaded="OnUnloaded">
  <UserControl.Resources>
    <ResourceDictionary>
      <ResourceDictionary.MergedDictionaries>
        <mui:SharedResourceDictionary Source="/AcManager.Controls;component/Assets/AcSettingsSpecific.xaml" />
        <mui:SharedResourceDictionary Source="/AcManager.Controls;component/Assets/IconData.xaml" />
        <mui:SharedResourceDictionary Source="/AcManager.Controls;component/Assets/SettingsSpecific.xaml" />
      </ResourceDictionary.MergedDictionaries>

      <DataTemplate x:Key="SystemButtonEntryCombinedTemplate" DataType="{x:Type acs:SystemButtonEntryCombined}">
        <Grid Margin="0 0 0 4" Background="Transparent" ToolTip="{Binding ToolTip}">
          <Grid.ContextMenu>
            <ContextMenu>
              <MenuItem Header="{x:Static c:ControlsStrings.Controls_ClearWheelBinding}" Command="{Binding WheelButton.ClearCommand}" />
              <MenuItem Header="{x:Static c:ControlsStrings.Controls_ClearKeyboardBinding}" Command="{Binding SystemButton.ClearCommand}" />
            </ContextMenu>
          </Grid.ContextMenu>

          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1.2*" MaxWidth="160" />
            <ColumnDefinition Width="1*" />
            <ColumnDefinition Width="0.75*" MinWidth="80" />
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="1.5*" MinWidth="160" />
          </Grid.ColumnDefinitions>

          <DockPanel Margin="0 1 0 -1">
            <TextBlock Text="{Binding DisplayModifiers}" DockPanel.Dock="Right" Margin="8 6 1 -6" FontWeight="Bold"
                Visibility="{Binding SystemButton, Converter={StaticResource NullToVisibilityConverter}, ConverterParameter=inverse}" />
            <TextBlock Style="{StaticResource Label}" TextAlignment="Left"
                Text="{Binding WheelButton.DisplayName, Converter={StaticResource ColonConverter}, ConverterParameter=trim}" />
            <Button Content="1" Style="{StaticResource MoreDetailsSuperscript}" ToolTip="Non-default operations, works only in Content Manager (if it works)"
                Margin="0 4 0 0" Visibility="{Binding CustomCommand, Converter={StaticResource BooleanToVisibilityConverter}}"
                Command="{Binding HighlightDetailsCommand, RelativeSource={RelativeSource AncestorType=acsc:AcSettingsControls_Wheel_System}}"
                CommandParameter="DetailsFirst" />
            <Button Content="2" Style="{StaticResource MoreDetailsSuperscript}" Margin="0 4 0 0"
                Visibility="{Binding ShiftToInvert, Converter={StaticResource BooleanToVisibilityConverter}}"
                Command="{Binding HighlightDetailsCommand, RelativeSource={RelativeSource AncestorType=acsc:AcSettingsControls_Wheel_System}}"
                CommandParameter="DetailsSecond">
              <Button.ToolTip>
                <ToolTip Content="{Binding SystemButton.DisplayInvertCombination}" ContentStringFormat="{}Use {0} for inversion" />
              </Button.ToolTip>
            </Button>
          </DockPanel>

          <mui:ReferenceSwitch Grid.Column="1" Value="{Binding SystemButton}">
            <mui:ReferenceSwitch.Null>
              <Button Grid.Column="1" ToolTip="{x:Static c:ControlsStrings.Controls_KeyboardButton}" IsEnabled="False" Style="{StaticResource WaitingButton}">
                <mui:Cell HorizontalAlignment="Stretch" Margin="0 -2">
                  <TextBlock Text="{Binding DisplayFixedValue}" />
                  <TextBlock Text="Not assigned" Opacity="0.5" HorizontalAlignment="Left" VerticalAlignment="Center"
                      Visibility="{Binding DisplayFixedValue, Converter={StaticResource NullToVisibilityConverter}}" TextTrimming="CharacterEllipsis"
                      Style="{StaticResource Small}" />
                </mui:Cell>
              </Button>
            </mui:ReferenceSwitch.Null>
            <mui:ReferenceSwitch.NonNull>
              <Button Grid.Column="1" ToolTip="{x:Static c:ControlsStrings.Controls_KeyboardButton}" DataContext="{Binding SystemButton}"
                  Command="{Binding ToggleWaitingCommand, Source={x:Static acset:AcSettingsHolder.Controls}}" CommandParameter="{Binding}"
                  Style="{StaticResource WaitingButton}">
                <Button.ContextMenu>
                  <ContextMenu>
                    <MenuItem Header="{x:Static c:ControlsStrings.Common_Clear}" Command="{Binding ClearCommand}" />
                  </ContextMenu>
                </Button.ContextMenu>
                <mui:Cell HorizontalAlignment="Stretch" Margin="0 -2">
                  <mui:Cell Visibility="{Binding IsWaiting, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter='inverse hidden'}">
                    <TextBlock Text="{Binding Input.DisplayName}" FontWeight="Bold" HorizontalAlignment="Left" TextTrimming="CharacterEllipsis" />
                    <TextBlock Text="{x:Static c:ControlsStrings.Controls_ClickToAssign}" Opacity="0.5" HorizontalAlignment="Left" VerticalAlignment="Center"
                        Visibility="{Binding Input, Converter={StaticResource NullToVisibilityConverter}}" TextTrimming="CharacterEllipsis"
                        Style="{StaticResource Small}" />
                    <Rectangle Fill="{DynamicResource Accent}" Width="4" Margin="-4 0" HorizontalAlignment="Right"
                        Visibility="{Binding Input.Value, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Collapsed}" />
                  </mui:Cell>
                  <TextBlock Text="{x:Static c:ControlsStrings.Controls_WaitingForInput}" HorizontalAlignment="Left" VerticalAlignment="Center"
                      Visibility="{Binding IsWaiting, Converter={StaticResource BooleanToVisibilityConverter}}" TextTrimming="CharacterEllipsis" />
                </mui:Cell>
              </Button>
            </mui:ReferenceSwitch.NonNull>
          </mui:ReferenceSwitch>

          <Button Grid.Column="2" ToolTip="Steering wheel button as modifier" Margin="20 0 0 0" Style="{StaticResource WaitingButton}"
              Command="{Binding ToggleWaitingCommand, Source={x:Static acset:AcSettingsHolder.Controls}}" CommandParameter="{Binding WheelButtonModifier}"
              IsEnabled="{Binding WheelButton.Input, Converter={StaticResource NullToBooleanConverter}, ConverterParameter='inverse'}">
            <Button.ContextMenu>
              <ContextMenu>
                <MenuItem Header="{x:Static c:ControlsStrings.Common_Clear}" Command="{Binding WheelButtonModifier.ClearCommand}" />
              </ContextMenu>
            </Button.ContextMenu>

            <mui:Cell HorizontalAlignment="Stretch" Margin="0 -2" DataContext="{Binding WheelButtonModifier}">
              <mui:Cell Visibility="{Binding IsWaiting, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter='inverse hidden'}">
                <TextBlock Text="{Binding Input.Device.DisplayName}" DockPanel.Dock="Top" Style="{StaticResource Small}" HorizontalAlignment="Left"
                    TextTrimming="CharacterEllipsis" FontStyle="{Binding Input.Device.IsVirtual, Converter={StaticResource BooleanToFontStyleConverter}}" />
                <TextBlock Text="{Binding Input.DisplayName}" FontWeight="Bold" HorizontalAlignment="Left" Margin="0 8 0 0" TextTrimming="CharacterEllipsis" />
                <TextBlock Text="No modifier" Opacity="0.5" HorizontalAlignment="Left" VerticalAlignment="Center"
                    Visibility="{Binding Input, Converter={StaticResource NullToVisibilityConverter}}" TextTrimming="CharacterEllipsis"
                    Style="{StaticResource Small}" />
                <Rectangle Fill="{DynamicResource Accent}" Width="4" Margin="-4 0" HorizontalAlignment="Right"
                    Visibility="{Binding Input.Value, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Collapsed}" />
              </mui:Cell>
              <TextBlock Text="{x:Static c:ControlsStrings.Controls_WaitingForInput}" HorizontalAlignment="Left" VerticalAlignment="Center"
                  Visibility="{Binding IsWaiting, Converter={StaticResource BooleanToVisibilityConverter}}" TextTrimming="CharacterEllipsis" />
            </mui:Cell>
          </Button>

          <DockPanel Grid.Column="3" Margin="0 1 0 -1">
            <TextBlock Style="{StaticResource Label}" TextAlignment="Left" Text="+" />
          </DockPanel>

          <Button Grid.Column="4" ToolTip="{x:Static c:ControlsStrings.Controls_SteeringWheelButton}" Margin="4 0 0 0" Style="{StaticResource WaitingButton}"
              Command="{Binding ToggleWaitingCommand, Source={x:Static acset:AcSettingsHolder.Controls}}" CommandParameter="{Binding WheelButton}"
              IsEnabled="{Binding IsWheelButtonAllowed}">
            <Button.ContextMenu>
              <ContextMenu>
                <MenuItem Header="{x:Static c:ControlsStrings.Common_Clear}" Command="{Binding WheelButton.ClearCommand}" />
              </ContextMenu>
            </Button.ContextMenu>

            <mui:Cell HorizontalAlignment="Stretch" Margin="0 -2" DataContext="{Binding WheelButton}">
              <mui:Cell Visibility="{Binding IsWaiting, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter='inverse hidden'}">
                <TextBlock Text="{Binding Input.Device.DisplayName}" DockPanel.Dock="Top" Style="{StaticResource Small}" HorizontalAlignment="Left"
                    TextTrimming="CharacterEllipsis" FontStyle="{Binding Input.Device.IsVirtual, Converter={StaticResource BooleanToFontStyleConverter}}" />
                <TextBlock Text="{Binding Input.DisplayName}" FontWeight="Bold" HorizontalAlignment="Left" Margin="0 8 0 0" TextTrimming="CharacterEllipsis" />
                <TextBlock Text="{x:Static c:ControlsStrings.Controls_ClickToAssign}" Opacity="0.5" HorizontalAlignment="Left" VerticalAlignment="Center"
                    Visibility="{Binding Input, Converter={StaticResource NullToVisibilityConverter}}" TextTrimming="CharacterEllipsis"
                    Style="{StaticResource Small}" />
                <Rectangle Fill="{DynamicResource Accent}" Width="4" Margin="-4 0" HorizontalAlignment="Right"
                    Visibility="{Binding Input.Value, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Collapsed}" />
              </mui:Cell>
              <TextBlock Text="{x:Static c:ControlsStrings.Controls_WaitingForInput}" HorizontalAlignment="Left" VerticalAlignment="Center"
                  Visibility="{Binding IsWaiting, Converter={StaticResource BooleanToVisibilityConverter}}" TextTrimming="CharacterEllipsis" />
            </mui:Cell>
          </Button>
        </Grid>
      </DataTemplate>
    </ResourceDictionary>
  </UserControl.Resources>

  <DockPanel>

    <Border x:Name="DetailsSecond" Margin="-8 0 -8 -8" DockPanel.Dock="Bottom" Padding="8" CornerRadius="4" Panel.ZIndex="1">
      <DockPanel>
        <Button Content="2" Style="{StaticResource MoreDetailsSuperscript}" Margin="0 4 2 0"
            Command="{Binding HighlightDetailsCommand, RelativeSource={RelativeSource AncestorType=acsc:AcSettingsControls_Wheel_System}}"
            CommandParameter="DetailsSecond" />
        <mui:BbCodeBlock Text="Hold Shift for inverse operation." />
      </DockPanel>
    </Border>

    <Border x:Name="DetailsFirst" Margin="-8 0 -8 -8" DockPanel.Dock="Bottom" Padding="8" CornerRadius="4" Panel.ZIndex="1">
      <DockPanel>
        <Button Content="1" Style="{StaticResource MoreDetailsSuperscript}" Margin="0 4 2 0"
            Command="{Binding HighlightDetailsCommand, RelativeSource={RelativeSource AncestorType=acsc:AcSettingsControls_Wheel_System}}"
            CommandParameter="DetailsFirst" />
        <mui:BbCodeBlock
            Text="Non-default operations, so they will work only in Content Manager, or with [url=&quot;https://labs.assettocorsa.jp/downloads/addon/addshortcutkey&quot;]this Python app[/url]. Thanks to [url=&quot;https://twitter.com/Tsuka1427&quot;]Tsuka[/url] for the great help in implementation!" />
      </DockPanel>
    </Border>

    <ScrollViewer DataContext="{Binding Source={x:Static acset:AcSettingsHolder.Controls}}" mui:SaveScroll.Key="AcSettingsControls_System">
      <mui:SpacingUniformGrid x:Name="MainGrid" VerticalStackMode="True">
        <StackPanel Margin="0 0 0 20">

          <TextBlock Style="{StaticResource Heading2}" Margin="0 0 0 4" Text="{x:Static g:AppStrings.AcSettings_Controls_Wheel_System_Race}" />
          <ItemsControl ItemsSource="{Binding SystemRaceButtonEntries}" ItemTemplate="{StaticResource SystemButtonEntryCombinedTemplate}" Margin="0 0 20 20" />

          <TextBlock Style="{StaticResource Heading2}" Margin="0 0 0 4" Text="{x:Static g:AppStrings.AcSettings_Controls_Wheel_System_Online}" />
          <ItemsControl ItemsSource="{Binding SystemOnlineButtonEntries}" ItemTemplate="{StaticResource SystemButtonEntryCombinedTemplate}" Margin="0 0 20 20" />

          <TextBlock Style="{StaticResource Heading2}" Margin="0 0 0 4" Text="{x:Static g:AppStrings.AcSettings_Controls_Wheel_System_Car}" />
          <ItemsControl ItemsSource="{Binding SystemCarButtonEntries}" ItemTemplate="{StaticResource SystemButtonEntryCombinedTemplate}" Margin="0 0 20 20" />

          <TextBlock Style="{StaticResource Heading2}" Margin="0 0 0 4" Text="{x:Static g:AppStrings.AcSettings_Controls_Wheel_System_UI}" />
          <ItemsControl ItemsSource="{Binding SystemUiButtonEntries}" ItemTemplate="{StaticResource SystemButtonEntryCombinedTemplate}" Margin="0 0 20 20" />

        </StackPanel>
        <StackPanel>

          <TextBlock Style="{StaticResource Heading2}" Margin="0 0 0 4" Text="{x:Static g:AppStrings.AcSettings_Controls_Wheel_System_Replay}" />
          <ItemsControl ItemsSource="{Binding SystemReplayButtonEntries}" ItemTemplate="{StaticResource SystemButtonEntryCombinedTemplate}" Margin="0 0 20 20" />

          <TextBlock Style="{StaticResource Heading2}" Margin="0 0 0 4" Text="{x:Static g:AppStrings.AcSettings_Controls_Wheel_System_Discord}" />
          <ItemsControl ItemsSource="{Binding SystemDiscordButtonEntries}" ItemTemplate="{StaticResource SystemButtonEntryCombinedTemplate}" Margin="0 0 20 20"
              IsEnabled="{Binding IsOverlayAvailable}" />

          <TextBlock Style="{StaticResource Heading2}" Margin="0 0 0 4" Text="{x:Static g:AppStrings.AcSettings_Controls_Wheel_System_Options}" />
          <StackPanel Style="{StaticResource SettingsPanel}" Margin="0 0 20 0">

            <CheckBox IsChecked="{Binding DelaySpecificSystemCommands}">
              <Label Content="Delay race-terminating commands by half a second" />
            </CheckBox>
            <CheckBox IsChecked="{Binding ShowSystemDelays}" IsEnabled="{Binding DelaySpecificSystemCommands}">
              <Label Content="Show overlay progress while delaying" />
            </CheckBox>
            <CheckBox IsChecked="{Binding SystemIgnorePovInPits}" ToolTip="To avoid conflicts with pits menu">
              <Label Content="Ignore POV1 buttons in pits" />
            </CheckBox>

            <c:MessageBlock CloseKey="povcontrols">
              <mui:BbCodeBlock Text="[i]Did you know?[/i] In this section, you can use POV buttons as well." />
            </c:MessageBlock>

            <!--<TextBlock Style="{StaticResource SettingsPanel.Heading2}" Text="Overlay-related options:" />

            <CheckBox IsChecked="{Binding Fullscreen, Source={x:Static acset:AcSettingsHolder.Video}}">
              <Label Content="Fullscreen (from video settings)" />
            </CheckBox>

            <DockPanel>
              <Label Content="Overlay apps:" />
              <mui:PlaceholderTextBlock Placeholder="No apps found"
                  Visibility="{Binding AppsForOverlay.Count, Converter={StaticResource EnumToVisibilityConverter}, ConverterParameter=0}" />
              <ListBox x:Name="EnabledAppsListBox" ItemsSource="{Binding AppsForOverlay}" SelectionMode="Multiple" Style="{StaticResource VirtualizingListBox}"
                  SelectionChanged="OnOverlayAppsListSelectionChanged" IsEnabled="{Binding Fullscreen, Source={x:Static acset:AcSettingsHolder.Video}}"
                  Visibility="{Binding AppsForOverlay.Count, Converter={StaticResource MoreToVisibilityConverter}}">
                <ListBox.ItemContainerStyle>
                  <Style TargetType="ListBoxItem" BasedOn="{StaticResource CheckBoxListBoxItem}">
                    <Style.Triggers>
                      <DataTrigger Binding="{Binding Enabled}" Value="False" d:DataContext="{d:DesignInstance t:PythonAppObject}">
                        <Setter Property="IsEnabled" Value="False" />
                      </DataTrigger>
                    </Style.Triggers>
                  </Style>
                </ListBox.ItemContainerStyle>
                <ListBox.ItemTemplate>
                  <DataTemplate DataType="t:PythonAppObject">
                    <DockPanel IsEnabled="{Binding Enabled}" Background="Transparent" mui:Draggable.Data="{Binding}">
                      <DockPanel.ToolTip>
                        <ToolTip Visibility="{Binding Description, Converter={StaticResource NullToVisibilityConverter}, ConverterParameter=inverse}">
                          <TextBlock Text="{Binding Description}" MaxWidth="400" TextWrapping="Wrap" />
                        </ToolTip>
                      </DockPanel.ToolTip>
                      <Path Data="{StaticResource BookmarkIconData}" Width="12" Height="12" DockPanel.Dock="Right" Fill="{DynamicResource FavouriteBrush}"
                          Stretch="Uniform" Visibility="Collapsed" x:Name="FavouriteIcon" VerticalAlignment="Center" Margin="2 0 4 0" />
                      <mui:BetterImage Width="14" Height="14" CollapseIfNull="True" CollapseIfMissing="True" ToolTip="{Binding AppIcon.Value}"
                          Filename="{Binding AppIcon.Value, FallbackValue={x:Null}}" Margin="0 0 4 0" ClearOnChange="True" />
                      <TextBlock Text="{Binding DisplayName}" />
                    </DockPanel>
                    <DataTemplate.Triggers>
                      <DataTrigger Binding="{Binding IsFavourite}" Value="True">
                        <Setter Property="Visibility" Value="Visible" TargetName="FavouriteIcon" />
                      </DataTrigger>
                    </DataTemplate.Triggers>
                  </DataTemplate>
                </ListBox.ItemTemplate>
              </ListBox>
            </DockPanel>

            <c:MessageBlock>
              <mui:BbCodeBlock
                  Text="[i]Please, read me![/i] To show popups — for example, for Discord join requests — CM needs to be able to display some stuff in AC. Now, it could be done either by just showing stuff on top of AC, but [b]only if AC is not in fullscreen mode[/b]. Or, alternatively, I’ve made [url=&quot;acmanager://install?url=https%3A%2F%2Fyadi.sk%2Fd%2F4_42zhk03RtCAL&quot;]a small Python app[/url] for it. It should work, although it won’t be as nice and smooth. For example, it won’t help at all if you’ll get a join request during loading or while in pits.[br][br]If you’re developing interface apps and want to integrate this feature, please, contact me." />
            </c:MessageBlock>-->
          </StackPanel>

        </StackPanel>
      </mui:SpacingUniformGrid>
    </ScrollViewer>

  </DockPanel>
</UserControl>